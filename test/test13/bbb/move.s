#NO_APP
	.text
.LC0:
	.ascii "NOMOVE\0"
.LC1:
	.ascii "12345678\0"
.LC2:
	.ascii "abcdefgh\0"
.LC3:
	.ascii "%c%c%c%c\0"
	.align	2
	.globl	_qprintMove
_qprintMove:
	movem.l #15392,-(sp)
	move.l 24(sp),d0
	jne .L2
	lea _buffer.2819,a1
	lea .LC0,a0
.L3:
	move.b (a0)+,(a1)+
	jne .L3
	move.l #_buffer.2819,d0
	movem.l (sp)+,#1084
	rts
.L2:
	moveq #0,d3
	not.b d3
	and.l d0,d3
	move.l d0,d1
	asr.l #8,d1
	moveq #0,d4
	not.b d4
	and.l d1,d4
	move.l d0,d2
	swap d2
	asr.w #8,d2
	ext.l d2
	moveq #7,d5
	and.l d5,d2
	asr.l #4,d4
	lea .LC1,a1
	move.b (a1,d4.l),d4
	ext.w d4
	move.w d4,a0
	move.l a0,-(sp)
	and.l d5,d1
	lea .LC2,a0
	move.b (a0,d1.l),d1
	ext.w d1
	move.w d1,a2
	move.l a2,-(sp)
	asr.l #4,d3
	move.b (a1,d3.l),d1
	ext.w d1
	move.w d1,a1
	move.l a1,-(sp)
	and.l d5,d0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	pea .LC3
	pea _buffer.2819
	jsr _sprintf
	lea (24,sp),sp
	moveq #5,d0
	cmp.l d2,d0
	jeq .L6
	jge .L16
	moveq #6,d0
	cmp.l d2,d0
	jeq .L9
	moveq #7,d0
	cmp.l d2,d0
	jne .L5
	move.b #113,_buffer.2819+4
.L11:
	clr.b _buffer.2819+5
.L17:
	move.l #_buffer.2819,d0
	movem.l (sp)+,#1084
	rts
.L16:
	moveq #3,d0
	cmp.l d2,d0
	jne .L5
	move.b #110,_buffer.2819+4
	clr.b _buffer.2819+5
	jra .L17
.L6:
	move.b #98,_buffer.2819+4
	clr.b _buffer.2819+5
	jra .L17
.L9:
	move.b #114,_buffer.2819+4
	jra .L11
.L5:
	tst.l d2
	jne .L11
	clr.b _buffer.2819+4
	move.l #_buffer.2819,d0
	movem.l (sp)+,#1084
	rts
	.align	2
	.globl	_InitMvvLva
_InitMvvLva:
	movem.l #14396,-(sp)
	lea _MvvLvaScores+68,a2
	lea _VictimScore+8,a3
	move.l #_MvvLvaScores+128,d4
	moveq #100,d0
	lea ___divsi3,a4
	pea -100.w
	move.l d0,-(sp)
	jsr (a4)
	addq.l #8,sp
	move.l d0,a0
	lea (106,a0),a5
	move.l a5,(a2)+
	move.l d0,d3
	add.l #606,d3
	move.l d3,60(a2)
	move.l d0,d2
	add.l #206,d2
	move.l d2,124(a2)
	addq.l #6,d0
	move.l d0,188(a2)
	lea (306,a0),a1
	move.l a1,252(a2)
	move.l a0,d1
	add.l #406,d1
	move.l d1,316(a2)
	lea (506,a0),a0
	move.l a0,380(a2)
	move.l d0,444(a2)
	move.l a5,508(a2)
	move.l d3,572(a2)
	move.l d2,636(a2)
	move.l d0,700(a2)
	move.l a1,764(a2)
	move.l d1,828(a2)
	move.l a0,892(a2)
	cmp.l a2,d4
	jeq .L18
.L23:
	move.l (a3)+,d0
	pea -100.w
	move.l d0,-(sp)
	jsr (a4)
	addq.l #8,sp
	move.l d0,a0
	lea (106,a0),a5
	move.l a5,(a2)+
	move.l d0,d3
	add.l #606,d3
	move.l d3,60(a2)
	move.l d0,d2
	add.l #206,d2
	move.l d2,124(a2)
	addq.l #6,d0
	move.l d0,188(a2)
	lea (306,a0),a1
	move.l a1,252(a2)
	move.l a0,d1
	add.l #406,d1
	move.l d1,316(a2)
	lea (506,a0),a0
	move.l a0,380(a2)
	move.l d0,444(a2)
	move.l a5,508(a2)
	move.l d3,572(a2)
	move.l d2,636(a2)
	move.l d0,700(a2)
	move.l a1,764(a2)
	move.l d1,828(a2)
	move.l a0,892(a2)
	cmp.l a2,d4
	jne .L23
.L18:
	movem.l (sp)+,#15388
	rts
.LC4:
	.ascii "O-O\0"
.LC5:
	.ascii "O-O-O\0"
.LC6:
	.ascii " PKN BRQ\0"
	.align	2
	.globl	_move_to_san
_move_to_san:
	movem.l #16188,-(sp)
	move.l 44(sp),d1
	moveq #0,d3
	not.b d3
	and.l d1,d3
	move.l d1,d5
	lsr.l #8,d5
	moveq #0,d4
	not.b d4
	and.l d5,d4
	move.l d1,d0
	moveq #28,d2
	lsr.l d2,d0
	subq.l #1,d0
	jeq .L66
	lea _buffer.2847,a2
	lea _buffer.2847,a0
	clr.b (a0)
	clr.b 1(a0)
	clr.b 2(a0)
	clr.b 3(a0)
	clr.b 4(a0)
	clr.b 5(a0)
	clr.b 6(a0)
	clr.b 7(a0)
	clr.b 8(a0)
	clr.b 9(a0)
	clr.b 10(a0)
	clr.b 11(a0)
	move.l d1,d7
	clr.w d7
	swap d7
	moveq #7,d0
	and.l d7,d0
	moveq #1,d2
	cmp.l d0,d2
	jeq .L31
	lea .LC6,a0
	move.b (a0,d0.l),(a2)
	tst.l 56(sp)
	jle .L44
	lsr.l #4,d3
	move.l d3,a5
	move.l 60(sp),a0
	move.l 56(sp),d3
	add.l d3,d3
	add.l 56(sp),d3
	add.l d3,d3
	add.l d3,d3
	add.l a0,d3
	sub.l a1,a1
	sub.l a3,a3
	sub.l a4,a4
.L35:
	move.l (a0),d0
	cmp.l d0,d1
	jeq .L33
	move.l d0,d2
	lsr.l #8,d2
	moveq #0,d6
	not.b d6
	and.l d2,d6
	cmp.l d4,d6
	jeq .L67
.L33:
	lea (12,a0),a0
	cmp.l d3,a0
	jne .L35
.L71:
	cmp.w #0,a4
	jeq .L68
.L36:
	lea .LC2,a1
	moveq #7,d0
	and.l d1,d0
	move.b (a1,d0.l),_buffer.2847+1
	moveq #4,d2
	moveq #3,d0
	move.w #2,a0
	cmp.w #0,a3
	jeq .L61
.L72:
	lea .LC1,a3
	move.b (a3,a5.l),(a2,a0.l)
	move.l d0,a0
	move.l d2,d0
	move.l d1,d2
	clr.w d2
	swap d2
	lsr.w #4,d2
	moveq #15,d3
	and.l d3,d2
	jne .L40
.L73:
	move.l a0,d2
	addq.l #2,d2
.L38:
	clr.w d1
	swap d1
	lsr.w #8,d1
	moveq #7,d3
	and.l d3,d1
	and.l d3,d5
	move.b (a1,d5.l),(a2,a0.l)
	lsr.l #4,d4
	move.b (a3,d4.l),(a2,d0.l)
	tst.l d1
	jeq .L41
	move.b #61,(a2,d2.l)
	move.l a0,d2
	addq.l #4,d2
	lea .LC6,a1
	move.b (a1,d1.l),3(a2,a0.l)
.L41:
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	eor.b #1,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	lea _kingLoc,a0
	move.l (a0,d0.l),-(sp)
	eor.b #8,d1
	and.l #255,d1
	move.l d1,-(sp)
	jsr _isAttacked
	addq.l #8,sp
	tst.l d0
	jne .L69
	clr.b (a2,d2.l)
.L28:
	move.l #_buffer.2847,d0
	movem.l (sp)+,#15612
	rts
.L67:
	move.l d0,d2
	clr.w d2
	swap d2
	eor.l d7,d2
	moveq #15,d6
	and.l d6,d2
	jne .L33
	move.l d0,d2
	lsr.l #4,d2
	and.l d6,d2
	cmp.l a5,d2
	jeq .L70
.L34:
	eor.l d1,d0
	moveq #7,d2
	and.l d2,d0
	move.w #1,a1
	jne .L33
	move.w #1,a3
	lea (12,a0),a0
	cmp.l d3,a0
	jne .L35
	jra .L71
.L68:
	cmp.w #0,a1
	jne .L36
	moveq #3,d2
	moveq #2,d0
	move.w #1,a0
	lea .LC2,a1
	cmp.w #0,a3
	jne .L72
.L61:
	lea .LC1,a3
.L74:
	move.l d1,d2
	clr.w d2
	swap d2
	lsr.w #4,d2
	moveq #15,d3
	and.l d3,d2
	jeq .L73
.L40:
	move.l d0,d2
	addq.l #2,d2
	move.l a0,d3
	move.l d0,a0
	addq.l #1,d0
	move.b #120,(a2,d3.l)
	jra .L38
.L69:
	jsr _numOfLegalMoves
	tst.l d0
	jeq .L43
	move.b #43,(a2,d2.l)
	addq.l #1,d2
	clr.b (a2,d2.l)
	jra .L28
.L66:
	lea _buffer.2847,a1
	cmp.l d3,d4
	jls .L26
	lea .LC4,a0
.L27:
	move.b (a0)+,(a1)+
	jeq .L28
	move.b (a0)+,(a1)+
	jne .L27
	jra .L28
.L31:
	move.l d1,d2
	clr.w d2
	swap d2
	lsr.w #4,d2
	moveq #15,d3
	and.l d3,d2
	jeq .L48
	lea .LC2,a1
	moveq #7,d0
	and.l d1,d0
	move.b (a1,d0.l),(a2)
	moveq #1,d3
	moveq #4,d2
	moveq #3,d0
	move.w #2,a0
	lea .LC1,a3
	move.b #120,(a2,d3.l)
	jra .L38
.L70:
	move.w #1,a4
	jra .L34
.L26:
	lea .LC5,a0
.L29:
	move.b (a0)+,(a1)+
	jeq .L28
	move.b (a0)+,(a1)+
	jne .L29
	jra .L28
.L43:
	move.b #35,(a2,d2.l)
	addq.l #1,d2
	clr.b (a2,d2.l)
	jra .L28
.L48:
	moveq #2,d2
	sub.l a0,a0
	lea .LC2,a1
	lea .LC1,a3
	jra .L38
.L44:
	moveq #2,d0
	move.w #1,a0
	lea .LC2,a1
	lea .LC1,a3
	jra .L74
.LC7:
	.ascii "n\0"
.LC8:
	.ascii "b\0"
.LC9:
	.ascii "r\0"
.LC10:
	.ascii "q\0"
	.align	2
	.globl	_printMove
_printMove:
	movem.l #12320,-(sp)
	move.l 16(sp),d2
	moveq #0,d1
	not.b d1
	and.l d2,d1
	move.l d2,d0
	lsr.l #8,d0
	moveq #0,d3
	not.b d3
	and.l d0,d3
	asr.l #4,d3
	lea .LC1,a1
	move.b (a1,d3.l),d3
	ext.w d3
	move.w d3,a0
	move.l a0,-(sp)
	moveq #7,d3
	and.l d3,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a2
	move.l a2,-(sp)
	asr.l #4,d1
	move.b (a1,d1.l),d0
	ext.w d0
	move.w d0,a1
	move.l a1,-(sp)
	moveq #7,d0
	and.l d2,d0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	pea .LC3
	jsr _printf
	lea (20,sp),sp
	clr.w d2
	swap d2
	lsr.w #8,d2
	moveq #7,d0
	and.l d0,d2
	moveq #5,d0
	cmp.l d2,d0
	jeq .L77
	jge .L84
	moveq #6,d0
	cmp.l d2,d0
	jeq .L80
	moveq #7,d0
	cmp.l d2,d0
	jne .L75
	move.l #.LC10,16(sp)
	movem.l (sp)+,#1036
	jra _printf
.L80:
	move.l #.LC9,16(sp)
	movem.l (sp)+,#1036
	jra _printf
.L84:
	moveq #3,d0
	cmp.l d2,d0
	jne .L75
	move.l #.LC7,16(sp)
	movem.l (sp)+,#1036
	jra _printf
.L75:
	movem.l (sp)+,#1036
	rts
.L77:
	move.l #.LC8,16(sp)
	movem.l (sp)+,#1036
	jra _printf
	.align	2
	.globl	_moveToUCI
_moveToUCI:
	movem.l #12320,-(sp)
	move.l 16(sp),d2
	moveq #0,d1
	not.b d1
	and.l d2,d1
	move.l d2,d0
	asr.l #8,d0
	moveq #0,d3
	not.b d3
	and.l d0,d3
	asr.l #4,d3
	lea .LC1,a1
	move.b (a1,d3.l),d3
	ext.w d3
	move.w d3,a0
	move.l a0,-(sp)
	moveq #7,d3
	and.l d3,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a2
	move.l a2,-(sp)
	asr.l #4,d1
	move.b (a1,d1.l),d0
	ext.w d0
	move.w d0,a1
	move.l a1,-(sp)
	moveq #7,d0
	and.l d2,d0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	pea .LC3
	pea _buffer.2880
	jsr _sprintf
	lea (24,sp),sp
	swap d2
	asr.w #8,d2
	ext.l d2
	moveq #7,d0
	and.l d0,d2
	moveq #5,d0
	cmp.l d2,d0
	jeq .L87
	jge .L94
	subq.l #6,d2
	jeq .L90
	subq.l #1,d2
	jne .L86
	move.b #113,_buffer.2880+4
.L86:
	clr.b _buffer.2880+5
	move.l #_buffer.2880,d0
	movem.l (sp)+,#1036
	rts
.L90:
	move.b #114,_buffer.2880+4
	clr.b _buffer.2880+5
	move.l #_buffer.2880,d0
	movem.l (sp)+,#1036
	rts
.L94:
	subq.l #3,d2
	jne .L86
	move.b #110,_buffer.2880+4
	clr.b _buffer.2880+5
	move.l #_buffer.2880,d0
	movem.l (sp)+,#1036
	rts
.L87:
	move.b #98,_buffer.2880+4
	clr.b _buffer.2880+5
	move.l #_buffer.2880,d0
	movem.l (sp)+,#1036
	rts
.LC11:
	.ascii "x\0"
.LC12:
	.ascii "\0"
.LC13:
	.ascii "%d) %c%c%s%c%c\0"
.LC14:
	.ascii "=n\0"
.LC15:
	.ascii "=b\0"
.LC16:
	.ascii "=r\0"
.LC17:
	.ascii "=q\0"
.LC18:
	.ascii "\12\0"
	.align	2
	.globl	_printMoveList
_printMoveList:
	movem.l #16190,-(sp)
	tst.l _moveIndex
	jle .L95
	sub.l a2,a2
	moveq #0,d3
	lea .LC1,a5
	lea .LC2,a4
	lea _printf,a3
	move.l #.LC11,d5
	lea .LC12,a6
.L104:
	move.l _moveList,a0
	move.l (a0,a2.l),d0
	moveq #0,d1
	not.b d1
	and.l d0,d1
	move.l d0,d6
	lsr.l #8,d6
	moveq #0,d7
	not.b d7
	and.l d6,d7
	move.l d0,d2
	clr.w d2
	swap d2
	lsr.w #8,d2
	moveq #7,d4
	and.l d4,d2
	asr.l #4,d7
	move.b (a5,d7.l),d7
	ext.w d7
	move.w d7,a0
	and.l d4,d6
	move.b (a4,d6.l),d6
	ext.w d6
	move.w d6,a1
	clr.w d0
	swap d0
	lsr.w #4,d0
	moveq #15,d4
	and.l d4,d0
	jne .L106
	move.l a6,d0
	addq.l #1,d3
	move.l a0,-(sp)
	move.l a1,-(sp)
	move.l d0,-(sp)
	move.l d1,d0
	asr.l #4,d0
	move.b (a5,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	moveq #7,d0
	and.l d0,d1
	move.b (a4,d1.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	move.l d3,-(sp)
	pea .LC13
	jsr (a3)
	lea (28,sp),sp
	moveq #5,d0
	cmp.l d2,d0
	jeq .L99
.L111:
	cmp.l d2,d0
	jge .L110
	subq.l #6,d2
	jeq .L102
	subq.l #1,d2
	jne .L98
	pea .LC17
	jsr (a3)
	addq.l #4,sp
.L98:
	pea .LC18
	jsr (a3)
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l _moveIndex.l,d3
	jlt .L104
.L95:
	movem.l (sp)+,#31996
	rts
.L106:
	move.l d5,d0
	addq.l #1,d3
	move.l a0,-(sp)
	move.l a1,-(sp)
	move.l d0,-(sp)
	move.l d1,d0
	asr.l #4,d0
	move.b (a5,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	moveq #7,d0
	and.l d0,d1
	move.b (a4,d1.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	move.l d3,-(sp)
	pea .LC13
	jsr (a3)
	lea (28,sp),sp
	moveq #5,d0
	cmp.l d2,d0
	jne .L111
.L99:
	pea .LC15
	jsr (a3)
	addq.l #4,sp
	pea .LC18
	jsr (a3)
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l _moveIndex.l,d3
	jlt .L104
	jra .L95
.L110:
	subq.l #3,d2
	jne .L98
	pea .LC14
	jsr (a3)
	addq.l #4,sp
	pea .LC18
	jsr (a3)
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l _moveIndex.l,d3
	jlt .L104
	jra .L95
.L102:
	pea .LC16
	jsr (a3)
	addq.l #4,sp
	pea .LC18
	jsr (a3)
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l _moveIndex.l,d3
	jlt .L104
	jra .L95
	.align	2
	.globl	_pushMove
_pushMove:
	movem.l #15392,-(sp)
	move.l 28(sp),d2
	move.l 32(sp),d1
	move.l 36(sp),d4
	move.l _moveIndex,d3
	move.l d3,d0
	add.l d3,d0
	add.l d3,d0
	add.l d0,d0
	add.l d0,d0
	move.l _moveList,a0
	add.l d0,a0
	move.l d2,d0
	lsl.l #8,d0
	or.l 24(sp),d0
	move.l d1,d5
	swap d5
	clr.w d5
	or.l d5,d0
	move.l d4,d5
	lsl.w #4,d5
	swap d5
	clr.w d5
	or.l d5,d0
	move.l d0,(a0)
	tst.l d4
	jne .L119
	lea _board,a2
	move.w _board+142,a1
	move.l a1,d4
	add.l #4036,d4
	add.l d4,d4
	add.l d4,d4
	cmp.l (a2,d4.l),d0
	jeq .L120
	lea (5036,a1),a1
	add.l a1,a1
	add.l a1,a1
	cmp.l (a1,a2.l),d0
	jeq .L121
	lsl.l #7,d1
	add.l d1,d2
	add.l #6036,d2
	add.l d2,d2
	add.l d2,d2
	move.l (a2,d2.l),8(a0)
	addq.l #1,d3
	move.l d3,_moveIndex
	movem.l (sp)+,#1084
	rts
.L119:
	lsl.l #4,d4
	add.l d4,d1
	add.l d1,d1
	add.l d1,d1
	lea _MvvLvaScores,a1
	move.l (a1,d1.l),d1
	add.l #1000000,d1
	move.l d1,8(a0)
	addq.l #1,d3
	move.l d3,_moveIndex
	movem.l (sp)+,#1084
	rts
.L120:
	move.l #900000,8(a0)
	addq.l #1,d3
	move.l d3,_moveIndex
	movem.l (sp)+,#1084
	rts
.L121:
	move.l #800000,8(a0)
	addq.l #1,d3
	move.l d3,_moveIndex
	movem.l (sp)+,#1084
	rts
	.align	2
	.globl	_pushSpecialMove
_pushSpecialMove:
	movem.l #14336,-(sp)
	move.l 32(sp),d3
	move.l _moveIndex,d1
	move.l d1,d0
	add.l d1,d0
	add.l d1,d0
	add.l d0,d0
	add.l d0,d0
	move.l _moveList,a0
	add.l d0,a0
	move.l 20(sp),d0
	lsl.l #8,d0
	or.l 16(sp),d0
	move.l 24(sp),d2
	swap d2
	clr.w d2
	or.l d2,d0
	move.l 28(sp),d2
	lsl.w #4,d2
	swap d2
	clr.w d2
	or.l d2,d0
	move.l d3,d2
	moveq #28,d4
	lsl.l d4,d2
	or.l d2,d0
	move.l d0,(a0)
	moveq #2,d0
	cmp.l d3,d0
	jeq .L126
	addq.l #1,d1
	move.l d1,_moveIndex
	movem.l (sp)+,#28
	rts
.L126:
	move.l #1000105,8(a0)
	addq.l #1,d1
	move.l d1,_moveIndex
	movem.l (sp)+,#28
	rts
	.align	2
	.globl	_pushPromotion
_pushPromotion:
	movem.l #16160,-(sp)
	move.l 32(sp),d0
	move.l 40(sp),d2
	move.l 44(sp),a0
	move.l _moveList,a1
	move.l _moveIndex,d4
	move.l d4,d1
	add.l d4,d1
	add.l d4,d1
	add.l d1,d1
	add.l d1,d1
	lea (a1,d1.l),a2
	move.l d2,d5
	lsl.w #8,d5
	swap d5
	clr.w d5
	move.l a0,d6
	lsl.w #4,d6
	swap d6
	clr.w d6
	swap d2
	clr.w d2
	bset #16,d2
	move.l 36(sp),d7
	lsl.l #8,d7
	move.l d0,d3
	or.l #83886080,d3
	or.l d7,d3
	or.l d6,d3
	or.l d5,d3
	or.l d2,d3
	move.l d3,(a2)
	move.l a0,d3
	lsl.l #6,d3
	move.l d3,a0
	add.l #_MvvLvaScores+4,a0
	move.l (a0),d3
	add.l _MvvLvaScores+324,d3
	add.l #1000000,d3
	move.l d3,8(a2)
	lea 12(a1,d1.l),a2
	move.l d0,d3
	or.l #50331648,d3
	or.l d7,d3
	or.l d6,d3
	or.l d5,d3
	or.l d2,d3
	move.l d3,(a2)
	move.l (a0),d3
	add.l _MvvLvaScores+196,d3
	add.l #1000000,d3
	move.l d3,8(a2)
	lea 24(a1,d1.l),a2
	move.l d0,d3
	or.l #100663296,d3
	or.l d7,d3
	or.l d6,d3
	or.l d5,d3
	or.l d2,d3
	move.l d3,(a2)
	move.l (a0),d3
	add.l _MvvLvaScores+388,d3
	add.l #1000000,d3
	move.l d3,8(a2)
	lea 36(a1,d1.l),a1
	or.l #117440512,d0
	or.l d7,d0
	or.l d6,d0
	or.l d5,d0
	or.l d2,d0
	move.l d0,(a1)
	addq.l #4,d4
	move.l d4,_moveIndex
	move.l (a0),d0
	add.l _MvvLvaScores+452,d0
	add.l #1000000,d0
	move.l d0,8(a1)
	movem.l (sp)+,#1276
	rts
	.align	2
	.globl	_generateKingMoves
_generateKingMoves:
	subq.l #8,sp
	movem.l #16190,-(sp)
	move.l 60(sp),d4
	moveq #2,d0
	or.l 56(sp),d0
	move.l d0,a3
	move.l _moveList,a4
	move.l _moveIndex,d2
	move.l d0,d7
	swap d7
	clr.w d7
	or.l d4,d7
	move.w _board+142,a0
	lea _rmoves.2946+4,a1
	move.l #_rmoves.2946+32,d5
	sub.l a6,a6
	moveq #-17,d0
	lea _board,a2
	move.l a0,d6
	add.l #4036,d6
	add.l d6,d6
	add.l d6,d6
	move.l a0,d3
	add.l #5036,d3
	add.l d3,d3
	add.l d3,d3
	move.l a3,d1
	lsl.l #7,d1
	move.l d1,48(sp)
	lea _MvvLvaScores,a5
	move.l d3,44(sp)
.L134:
	add.l d4,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L129
	move.b (a2,d0.l),d1
	jeq .L130
	moveq #8,d3
	and.l d1,d3
	cmp.l 56(sp),d3
	jeq .L129
	and.l #255,d1
	move.l d2,a0
	add.l d2,a0
	add.l d2,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	lsl.l #8,d0
	or.l d7,d0
	move.l d1,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d0,d3
	move.l d3,(a0)
	lsl.l #4,d1
	add.l a3,d1
	add.l d1,d1
	add.l d1,d1
	move.l (a5,d1.l),d1
	add.l #1000000,d1
	move.l d1,8(a0)
	addq.l #1,d2
	move.w #1,a6
.L129:
	cmp.l d5,a1
	jeq .L133
	move.l (a1)+,d0
	jra .L134
.L130:
	move.l d2,d1
	add.l d2,d1
	add.l d2,d1
	add.l d1,d1
	add.l d1,d1
	lea (a4,d1.l),a0
	move.l d0,d1
	lsl.l #8,d1
	or.l d7,d1
	move.l d1,(a0)
	cmp.l (a2,d6.l),d1
	jeq .L145
	move.l 44(sp),a6
	cmp.l (a6,a2.l),d1
	jeq .L146
	add.l 48(sp),d0
	add.l #6036,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a2,d0.l),8(a0)
	addq.l #1,d2
	move.w #1,a6
	jra .L129
.L133:
	move.w a6,d0
	tst.b d0
	jne .L147
	movem.l (sp)+,#31996
	addq.l #8,sp
	rts
.L145:
	move.l #900000,8(a0)
	addq.l #1,d2
	move.w #1,a6
	jra .L129
.L146:
	move.l #800000,8(a0)
	addq.l #1,d2
	move.w #1,a6
	jra .L129
.L147:
	move.l d2,_moveIndex
	movem.l (sp)+,#31996
	addq.l #8,sp
	rts
	.align	2
	.globl	_generateKnightMoves
_generateKnightMoves:
	subq.l #8,sp
	movem.l #16190,-(sp)
	move.l 60(sp),d4
	moveq #3,d0
	or.l 56(sp),d0
	move.l d0,a3
	move.l _moveList,a4
	move.l _moveIndex,d2
	move.l d0,d7
	swap d7
	clr.w d7
	or.l d4,d7
	move.w _board+142,a0
	lea _rmoves.2956+4,a1
	move.l #_rmoves.2956+32,d5
	sub.l a6,a6
	moveq #-33,d0
	lea _board,a2
	move.l a0,d6
	add.l #4036,d6
	add.l d6,d6
	add.l d6,d6
	move.l a0,d3
	add.l #5036,d3
	add.l d3,d3
	add.l d3,d3
	move.l a3,d1
	lsl.l #7,d1
	move.l d1,48(sp)
	lea _MvvLvaScores,a5
	move.l d3,44(sp)
.L154:
	add.l d4,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L149
	move.b (a2,d0.l),d1
	jeq .L150
	moveq #8,d3
	and.l d1,d3
	cmp.l 56(sp),d3
	jeq .L149
	and.l #255,d1
	move.l d2,a0
	add.l d2,a0
	add.l d2,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	lsl.l #8,d0
	or.l d7,d0
	move.l d1,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d0,d3
	move.l d3,(a0)
	lsl.l #4,d1
	add.l a3,d1
	add.l d1,d1
	add.l d1,d1
	move.l (a5,d1.l),d1
	add.l #1000000,d1
	move.l d1,8(a0)
	addq.l #1,d2
	move.w #1,a6
.L149:
	cmp.l d5,a1
	jeq .L153
	move.l (a1)+,d0
	jra .L154
.L150:
	move.l d2,d1
	add.l d2,d1
	add.l d2,d1
	add.l d1,d1
	add.l d1,d1
	lea (a4,d1.l),a0
	move.l d0,d1
	lsl.l #8,d1
	or.l d7,d1
	move.l d1,(a0)
	cmp.l (a2,d6.l),d1
	jeq .L165
	move.l 44(sp),a6
	cmp.l (a6,a2.l),d1
	jeq .L166
	add.l 48(sp),d0
	add.l #6036,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a2,d0.l),8(a0)
	addq.l #1,d2
	move.w #1,a6
	jra .L149
.L153:
	move.w a6,d0
	tst.b d0
	jne .L167
	movem.l (sp)+,#31996
	addq.l #8,sp
	rts
.L165:
	move.l #900000,8(a0)
	addq.l #1,d2
	move.w #1,a6
	jra .L149
.L166:
	move.l #800000,8(a0)
	addq.l #1,d2
	move.w #1,a6
	jra .L149
.L167:
	move.l d2,_moveIndex
	movem.l (sp)+,#31996
	addq.l #8,sp
	rts
	.align	2
	.globl	_generateBishopMoves
_generateBishopMoves:
	lea (-20,sp),sp
	movem.l #16190,-(sp)
	move.l 68(sp),a5
	move.l a5,d0
	moveq #5,d1
	or.l d1,d0
	move.l d0,48(sp)
	move.l _moveList,56(sp)
	move.l _moveIndex,a1
	move.l d0,d1
	swap d1
	clr.w d1
	or.l 72(sp),d1
	move.w _board+142,a0
	move.l #_rmoves.2966+4,52(sp)
	lsl.l #7,d0
	clr.b d4
	moveq #-17,d5
	add.l #6036,d0
	move.l d0,60(sp)
	lea _board,a3
	lea (4036,a0),a6
	add.l a6,a6
	add.l a6,a6
	move.l a0,d0
	add.l #5036,d0
	add.l d0,d0
	move.l d0,a4
	add.l d0,a4
	move.l d1,44(sp)
.L177:
	move.l 72(sp),d2
	add.l d5,d2
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jne .L174
	move.l a1,d1
	addq.l #1,d1
	move.l d5,d6
	add.l d5,d6
	add.l d6,d6
	move.l 60(sp),a2
	add.l d2,a2
	add.l a2,a2
	add.l a2,a2
	add.l #_board,a2
	move.l d5,d7
	lsl.l #8,d7
	move.l d2,d3
	lsl.l #8,d3
	move.l a1,d0
	add.l a1,d0
	add.l d0,a1
	add.l a1,a1
	move.l a1,d0
	add.l a1,d0
	move.l 56(sp),a1
	lea 8(a1,d0.l),a0
.L179:
	move.l d1,a1
	subq.l #1,a1
	move.b (a3,d2.l),d0
	jeq .L172
	moveq #8,d2
	and.l d0,d2
	cmp.l d2,a5
	jeq .L174
	and.l #255,d0
	move.l d0,d2
	lsl.w #4,d2
	swap d2
	clr.w d2
	or.l 44(sp),d3
	or.l d3,d2
	move.l d2,-8(a0)
	lsl.l #4,d0
	add.l 48(sp),d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a1
	move.l (a1,d0.l),d0
	add.l #1000000,d0
	move.l d0,(a0)
	move.l d1,a1
	moveq #1,d4
.L174:
	cmp.l #_rmoves.2966+16,52(sp)
	jeq .L193
.L170:
	move.l 52(sp),a0
	addq.l #4,52(sp)
	move.l (a0)+,d5
	jra .L177
.L172:
	move.l 44(sp),d0
	or.l d3,d0
	move.l d0,-8(a0)
	cmp.l (a3,a6.l),d0
	jeq .L194
	cmp.l (a3,a4.l),d0
	jeq .L195
	move.l (a2),(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L179
.L197:
	cmp.l #_rmoves.2966+16,52(sp)
	jne .L170
.L193:
	tst.b d4
	jne .L196
	movem.l (sp)+,#31996
	lea (20,sp),sp
	rts
.L194:
	move.l #900000,(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L179
	jra .L197
.L195:
	move.l #800000,(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L179
	jra .L197
.L196:
	move.l a1,_moveIndex
	movem.l (sp)+,#31996
	lea (20,sp),sp
	rts
	.align	2
	.globl	_generateRookMoves
_generateRookMoves:
	lea (-20,sp),sp
	movem.l #16190,-(sp)
	move.l 68(sp),a5
	move.l a5,d0
	moveq #6,d1
	or.l d1,d0
	move.l d0,48(sp)
	move.l _moveList,56(sp)
	move.l _moveIndex,a1
	move.l d0,d1
	swap d1
	clr.w d1
	or.l 72(sp),d1
	move.w _board+142,a0
	move.l #_rmoves.2979+4,52(sp)
	lsl.l #7,d0
	clr.b d4
	moveq #-16,d5
	add.l #6036,d0
	move.l d0,60(sp)
	lea _board,a3
	lea (4036,a0),a6
	add.l a6,a6
	add.l a6,a6
	move.l a0,d0
	add.l #5036,d0
	add.l d0,d0
	move.l d0,a4
	add.l d0,a4
	move.l d1,44(sp)
.L207:
	move.l 72(sp),d2
	add.l d5,d2
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jne .L204
	move.l a1,d1
	addq.l #1,d1
	move.l d5,d6
	add.l d5,d6
	add.l d6,d6
	move.l 60(sp),a2
	add.l d2,a2
	add.l a2,a2
	add.l a2,a2
	add.l #_board,a2
	move.l d5,d7
	lsl.l #8,d7
	move.l d2,d3
	lsl.l #8,d3
	move.l a1,d0
	add.l a1,d0
	add.l d0,a1
	add.l a1,a1
	move.l a1,d0
	add.l a1,d0
	move.l 56(sp),a1
	lea 8(a1,d0.l),a0
.L209:
	move.l d1,a1
	subq.l #1,a1
	move.b (a3,d2.l),d0
	jeq .L202
	moveq #8,d2
	and.l d0,d2
	cmp.l d2,a5
	jeq .L204
	and.l #255,d0
	move.l d0,d2
	lsl.w #4,d2
	swap d2
	clr.w d2
	or.l 44(sp),d3
	or.l d3,d2
	move.l d2,-8(a0)
	lsl.l #4,d0
	add.l 48(sp),d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a1
	move.l (a1,d0.l),d0
	add.l #1000000,d0
	move.l d0,(a0)
	move.l d1,a1
	moveq #1,d4
.L204:
	cmp.l #_rmoves.2979+16,52(sp)
	jeq .L223
.L200:
	move.l 52(sp),a0
	addq.l #4,52(sp)
	move.l (a0)+,d5
	jra .L207
.L202:
	move.l 44(sp),d0
	or.l d3,d0
	move.l d0,-8(a0)
	cmp.l (a3,a6.l),d0
	jeq .L224
	cmp.l (a3,a4.l),d0
	jeq .L225
	move.l (a2),(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L209
.L227:
	cmp.l #_rmoves.2979+16,52(sp)
	jne .L200
.L223:
	tst.b d4
	jne .L226
	movem.l (sp)+,#31996
	lea (20,sp),sp
	rts
.L224:
	move.l #900000,(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L209
	jra .L227
.L225:
	move.l #800000,(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L209
	jra .L227
.L226:
	move.l a1,_moveIndex
	movem.l (sp)+,#31996
	lea (20,sp),sp
	rts
	.align	2
	.globl	_generateQueenMoves
_generateQueenMoves:
	lea (-20,sp),sp
	movem.l #16190,-(sp)
	move.l 68(sp),a5
	move.l a5,d0
	moveq #7,d1
	or.l d1,d0
	move.l d0,a4
	move.l _moveList,56(sp)
	move.l _moveIndex,a1
	swap d0
	clr.w d0
	or.l 72(sp),d0
	move.l d0,44(sp)
	move.w _board+142,a0
	move.l #_rmoves.2992+4,48(sp)
	move.l a4,d0
	lsl.l #7,d0
	clr.b d4
	moveq #-17,d5
	add.l #6036,d0
	move.l d0,60(sp)
	lea _board,a3
	lea (4036,a0),a6
	add.l a6,a6
	add.l a6,a6
	move.l a0,d0
	add.l #5036,d0
	add.l d0,d0
	add.l d0,d0
	move.l d0,52(sp)
.L237:
	move.l 72(sp),d2
	add.l d5,d2
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jne .L234
	move.l a1,d1
	addq.l #1,d1
	move.l d5,d6
	add.l d5,d6
	add.l d6,d6
	move.l 60(sp),a2
	add.l d2,a2
	add.l a2,a2
	add.l a2,a2
	add.l #_board,a2
	move.l d5,d7
	lsl.l #8,d7
	move.l d2,d3
	lsl.l #8,d3
	move.l a1,d0
	add.l a1,d0
	add.l d0,a1
	add.l a1,a1
	move.l a1,d0
	add.l a1,d0
	move.l 56(sp),a1
	lea 8(a1,d0.l),a0
.L239:
	move.l d1,a1
	subq.l #1,a1
	move.b (a3,d2.l),d0
	jeq .L232
	moveq #8,d2
	and.l d0,d2
	cmp.l d2,a5
	jeq .L234
	and.l #255,d0
	move.l d0,d2
	lsl.w #4,d2
	swap d2
	clr.w d2
	or.l 44(sp),d3
	or.l d3,d2
	move.l d2,-8(a0)
	lsl.l #4,d0
	add.l a4,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a1
	move.l (a1,d0.l),d0
	add.l #1000000,d0
	move.l d0,(a0)
	move.l d1,a1
	moveq #1,d4
.L234:
	cmp.l #_rmoves.2992+32,48(sp)
	jeq .L253
.L230:
	move.l 48(sp),a0
	addq.l #4,48(sp)
	move.l (a0)+,d5
	jra .L237
.L232:
	move.l 44(sp),d0
	or.l d3,d0
	move.l d0,-8(a0)
	cmp.l (a3,a6.l),d0
	jeq .L254
	move.l 52(sp),a1
	cmp.l (a3,a1.l),d0
	jeq .L255
	move.l (a2),(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L239
.L257:
	cmp.l #_rmoves.2992+32,48(sp)
	jne .L230
.L253:
	tst.b d4
	jne .L256
	movem.l (sp)+,#31996
	lea (20,sp),sp
	rts
.L254:
	move.l #900000,(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L239
	jra .L257
.L255:
	move.l #800000,(a0)
	move.l d1,a1
	add.l d5,d2
	addq.l #1,d1
	add.l d6,a2
	add.l d7,d3
	lea (12,a0),a0
	moveq #1,d4
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jeq .L239
	jra .L257
.L256:
	move.l a1,_moveIndex
	movem.l (sp)+,#31996
	lea (20,sp),sp
	rts
	.align	2
	.globl	_generatePawnMoves
_generatePawnMoves:
	movem.l #16188,-(sp)
	move.l 44(sp),d2
	move.l 48(sp),d5
	move.l d5,d6
	asr.l #4,d6
	moveq #8,d0
	cmp.l d2,d0
	jeq .L305
	moveq #16,d3
	add.l d5,d3
	move.l d3,d7
	asr.l #4,d7
	lea _board,a2
	tst.b (a2,d3.l)
	jne .L306
	tst.l d2
	jne .L284
	moveq #7,d0
	move.w #16,a5
	cmp.l d7,d0
	jeq .L261
.L262:
	moveq #1,d1
	or.l d2,d1
	move.l _moveIndex,a1
	move.l a1,d0
	add.l a1,d0
	add.l a1,d0
	add.l d0,d0
	add.l d0,d0
	move.l _moveList,a0
	add.l d0,a0
	move.l d1,d0
	swap d0
	clr.w d0
	move.l d0,d4
	or.l d5,d4
	move.l d3,d0
	lsl.l #8,d0
	or.l d4,d0
	move.l d0,a3
	move.l d0,(a0)
	move.w _board+142,a4
	move.l a4,d0
	add.l #4036,d0
	add.l d0,d0
	add.l d0,d0
	cmp.l (a2,d0.l),a3
	jeq .L307
	lea (5036,a4),a4
	add.l a4,a4
	add.l a4,a4
	cmp.l (a2,a4.l),a3
	jeq .L308
	lsl.l #7,d1
	add.l d3,d1
	add.l #6036,d1
	add.l d1,d1
	add.l d1,d1
	move.l (a2,d1.l),8(a0)
	addq.l #1,a1
	move.l a1,_moveIndex
.L263:
	move.l d3,d1
	subq.l #1,d1
	move.b (a2,d1.l),d0
	jeq .L267
	moveq #8,d4
	and.l d0,d4
	cmp.l d2,d4
	jeq .L267
	and.l #255,d0
	moveq #8,d4
	cmp.l d2,d4
	jeq .L309
	tst.l d2
	jne .L270
	moveq #7,d4
	cmp.l d7,d4
	jeq .L269
.L270:
	moveq #1,d4
	or.l d2,d4
	move.l d4,a3
	move.l _moveIndex,a1
	lea (a1,a1.l),a0
	add.l a1,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	swap d4
	clr.w d4
	or.l d5,d4
	lsl.l #8,d1
	or.l d4,d1
	move.l d0,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d1,d4
	move.l d4,(a0)
	lsl.l #4,d0
	add.l a3,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a3
	move.l (a3,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a0)
	addq.l #1,a1
	move.l a1,_moveIndex
.L267:
	move.l d3,d1
	addq.l #1,d1
	move.b (a2,d1.l),d0
	jeq .L271
	moveq #8,d4
	and.l d0,d4
	cmp.l d2,d4
	jeq .L271
	and.l #255,d0
	moveq #8,d4
	cmp.l d2,d4
	jeq .L310
	tst.l d2
	jne .L274
	subq.l #7,d7
	jeq .L273
.L274:
	moveq #1,d4
	or.l d2,d4
	move.l d4,a1
	move.l _moveIndex,d7
	move.l d7,a0
	add.l d7,a0
	add.l d7,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	swap d4
	clr.w d4
	or.l d5,d4
	lsl.l #8,d1
	or.l d4,d1
	move.l d0,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d1,d4
	move.l d4,(a0)
	lsl.l #4,d0
	add.l a1,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a1
	move.l (a1,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a0)
	addq.l #1,d7
	move.l d7,_moveIndex
.L271:
	moveq #8,d0
	cmp.l d2,d0
	jeq .L311
	tst.l d2
	jne .L258
	moveq #1,d0
	cmp.l d6,d0
	jeq .L276
.L258:
	movem.l (sp)+,#15612
	rts
.L306:
	move.w #16,a5
	jra .L263
.L311:
	subq.l #6,d6
	jne .L258
.L276:
	move.l a5,d4
	add.l d3,d4
	tst.b (a2,d4.l)
	jne .L258
	tst.b (a2,d3.l)
	jne .L258
	moveq #1,d0
	or.l d0,d2
	move.l _moveIndex,d1
	move.l d1,d0
	add.l d1,d0
	add.l d1,d0
	add.l d0,d0
	add.l d0,d0
	move.l _moveList,a0
	add.l d0,a0
	move.l d2,d0
	swap d0
	clr.w d0
	or.l d0,d5
	move.l d4,d0
	lsl.l #8,d0
	or.l d0,d5
	move.l d5,(a0)
	move.w _board+142,a1
	move.l a1,d0
	add.l #4036,d0
	add.l d0,d0
	add.l d0,d0
	cmp.l (a2,d0.l),d5
	jeq .L312
	lea (5036,a1),a1
	add.l a1,a1
	add.l a1,a1
	cmp.l (a2,a1.l),d5
	jeq .L313
	lsl.l #7,d2
	add.l d2,d4
	move.l d4,d0
	add.l #6036,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a2,d0.l),8(a0)
	addq.l #1,d1
	move.l d1,_moveIndex
.L314:
	movem.l (sp)+,#15612
	rts
.L305:
	moveq #-16,d3
	add.l d5,d3
	move.l d3,d7
	asr.l #4,d7
	lea _board,a2
	move.w #-16,a5
	tst.b (a2,d3.l)
	jne .L263
	tst.l d7
	jne .L262
.L261:
	clr.l -(sp)
	move.l d2,-(sp)
	move.l d3,-(sp)
	move.l d5,-(sp)
	jsr _pushPromotion
	lea (16,sp),sp
	jra .L263
.L310:
	tst.l d7
	jne .L274
.L273:
	move.l d0,-(sp)
	move.l d2,-(sp)
	move.l d1,-(sp)
	move.l d5,-(sp)
	jsr _pushPromotion
	lea (16,sp),sp
	jra .L271
.L309:
	tst.l d7
	jne .L270
.L269:
	move.l d0,-(sp)
	move.l d2,-(sp)
	move.l d1,-(sp)
	move.l d5,-(sp)
	jsr _pushPromotion
	lea (16,sp),sp
	jra .L267
.L284:
	move.w #16,a5
	jra .L262
.L308:
	move.l #800000,8(a0)
	addq.l #1,a1
	move.l a1,_moveIndex
	jra .L263
.L313:
	move.l #800000,8(a0)
	addq.l #1,d1
	move.l d1,_moveIndex
	jra .L314
.L307:
	move.l #900000,8(a0)
	addq.l #1,a1
	move.l a1,_moveIndex
	jra .L263
.L312:
	move.l #900000,8(a0)
	addq.l #1,d1
	move.l d1,_moveIndex
	jra .L314
.LC19:
	.ascii "Error in move.c. Piece: %d (%d at %s).  Move #%d\12\0"
	.align	2
	.globl	_generateMoves
_generateMoves:
	lea (-16,sp),sp
	movem.l #16190,-(sp)
	move.l 64(sp),_moveList
	clr.l _moveIndex
	move.b _board+128,d1
	moveq #0,d6
	lea _board,a5
	lea _MvvLvaScores,a3
.L339:
	moveq #119,d0
	not.b d0
	and.l d6,d0
	jne .L316
	move.b (a5,d6.l),d3
	jeq .L316
	move.b d3,d2
	and.b #8,d2
	cmp.b d2,d1
	jeq .L402
.L316:
	addq.l #1,d6
	cmp.l #128,d6
	jne .L339
.L406:
	move.b _board+129,d0
	tst.b d1
	jne .L340
	btst #3,d0
	jeq .L341
	move.l _board+4,d1
	and.l #16776960,d1
	jeq .L403
.L341:
	btst #2,d0
	jeq .L393
.L417:
	move.l (a5),d0
	and.l #16777215,d0
	jeq .L404
.L393:
	move.l _moveIndex,d0
	move.b _board+130,d1
	cmp.b #127,d1
	jeq .L315
.L418:
	move.b d1,d2
	lsr.b #4,d2
	cmp.b #5,d2
	jeq .L405
.L315:
	movem.l (sp)+,#31996
	lea (16,sp),sp
	rts
.L402:
	moveq #0,d5
	move.b d1,d5
	moveq #7,d0
	and.l d0,d3
	move.l d3,d0
	add.l d0,d0
	move.w .L319(pc,d0.l),d0
	jmp %pc@(2,d0:w)
	.balignw 2,0x284c
.L319:
	.word .L317-.L319
	.word .L318-.L319
	.word .L320-.L319
	.word .L321-.L319
	.word .L317-.L319
	.word .L322-.L319
	.word .L323-.L319
	.word .L324-.L319
.L324:
	move.l d6,-(sp)
	move.l d5,-(sp)
	jsr _generateQueenMoves
	move.b _board+128,d1
	addq.l #8,sp
	addq.l #1,d6
	cmp.l #128,d6
	jne .L339
	jra .L406
.L323:
	move.l d6,-(sp)
	move.l d5,-(sp)
	jsr _generateRookMoves
	move.b _board+128,d1
	addq.l #8,sp
	addq.l #1,d6
	cmp.l #128,d6
	jne .L339
	jra .L406
.L322:
	move.l d6,-(sp)
	move.l d5,-(sp)
	jsr _generateBishopMoves
	move.b _board+128,d1
	addq.l #8,sp
	addq.l #1,d6
	cmp.l #128,d6
	jne .L339
	jra .L406
.L321:
	or.b #3,d1
	and.l #255,d1
	move.l _moveList,a4
	move.l _moveIndex,d4
	move.l d1,d0
	swap d0
	clr.w d0
	or.l d6,d0
	move.l d0,48(sp)
	move.w _board+142,a0
	lea _rmoves.2956+4,a1
	move.l #_rmoves.2956+32,d7
	sub.l a6,a6
	moveq #-33,d0
	move.l a0,d3
	add.l #4036,d3
	add.l d3,d3
	move.l d3,a2
	add.l d3,a2
	lea (5036,a0),a0
	add.l a0,a0
	add.l a0,a0
	move.l a0,52(sp)
	move.l d1,d3
	lsl.l #7,d3
	move.l d3,56(sp)
	move.l d1,44(sp)
.L325:
	add.l d6,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L333
	move.b (a5,d0.l),d3
	jeq .L334
	moveq #8,d1
	and.l d3,d1
	cmp.l d5,d1
	jeq .L333
	and.l #255,d3
	move.l d4,a0
	add.l d4,a0
	add.l d4,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	move.l d3,d1
	lsl.w #4,d1
	swap d1
	clr.w d1
	lsl.l #8,d0
	or.l d1,d0
	or.l 48(sp),d0
	move.l d0,(a0)
	lsl.l #4,d3
	move.l 44(sp),d0
	add.l d3,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a3,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a0)
	addq.l #1,d4
	move.w #1,a6
.L333:
	cmp.l d7,a1
	jeq .L397
	move.l (a1)+,d0
	jra .L325
.L320:
	or.b #2,d1
	and.l #255,d1
	move.l _moveList,a4
	move.l _moveIndex,d4
	move.l d1,d0
	swap d0
	clr.w d0
	or.l d6,d0
	move.l d0,48(sp)
	move.w _board+142,a0
	lea _rmoves.2946+4,a1
	move.l #_rmoves.2946+32,d7
	sub.l a6,a6
	moveq #-17,d0
	move.l a0,d3
	add.l #4036,d3
	add.l d3,d3
	move.l d3,a2
	add.l d3,a2
	lea (5036,a0),a0
	add.l a0,a0
	add.l a0,a0
	move.l a0,52(sp)
	move.l d1,d3
	lsl.l #7,d3
	move.l d3,56(sp)
	move.l d1,44(sp)
.L326:
	add.l d6,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L327
	move.b (a5,d0.l),d3
	jeq .L328
	moveq #8,d1
	and.l d3,d1
	cmp.l d5,d1
	jeq .L327
	and.l #255,d3
	move.l d4,a0
	add.l d4,a0
	add.l d4,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	move.l d3,d1
	lsl.w #4,d1
	swap d1
	clr.w d1
	lsl.l #8,d0
	or.l d1,d0
	or.l 48(sp),d0
	move.l d0,(a0)
	lsl.l #4,d3
	move.l 44(sp),d0
	add.l d3,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a3,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a0)
	addq.l #1,d4
	move.w #1,a6
.L327:
	cmp.l d7,a1
	jeq .L397
	move.l (a1)+,d0
	jra .L326
.L318:
	move.l d6,-(sp)
	move.l d5,-(sp)
	jsr _generatePawnMoves
	move.b _board+128,d1
	addq.l #8,sp
	addq.l #1,d6
	cmp.l #128,d6
	jne .L339
	jra .L406
.L317:
	move.l _moveIndex,d2
	move.l d6,-(sp)
	jsr _sq2algebraic
	move.l d2,-(sp)
	move.l d0,-(sp)
	moveq #0,d0
	move.b (a5,d6.l),d0
	move.l d0,-(sp)
	move.l d3,-(sp)
	pea .LC19
	move.l ___sF,a0
	move.l 8(a0),-(sp)
	jsr _fprintf
	jsr _printBoard
	pea 1.w
	jsr _exit
	move.b _board+128,d1
	lea (32,sp),sp
	addq.l #1,d6
	cmp.l #128,d6
	jne .L339
	jra .L406
.L397:
	move.w a6,d0
	tst.b d0
	jne .L407
	move.b d2,d1
.L425:
	addq.l #1,d6
	cmp.l #128,d6
	jne .L339
	jra .L406
.L328:
	move.l d4,a0
	add.l d4,a0
	add.l d4,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	move.l d0,d3
	lsl.l #8,d3
	or.l 48(sp),d3
	move.l d3,(a0)
	cmp.l (a5,a2.l),d3
	jeq .L408
	move.l 52(sp),d1
	cmp.l (a5,d1.l),d3
	jeq .L409
	add.l 56(sp),d0
	add.l #6036,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a5,d0.l),8(a0)
	addq.l #1,d4
	move.w #1,a6
	jra .L327
.L334:
	move.l d4,a0
	add.l d4,a0
	add.l d4,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	move.l d0,d3
	lsl.l #8,d3
	or.l 48(sp),d3
	move.l d3,(a0)
	cmp.l (a5,a2.l),d3
	jeq .L410
	move.l 52(sp),d1
	cmp.l (a5,d1.l),d3
	jeq .L411
	add.l 56(sp),d0
	add.l #6036,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a5,d0.l),8(a0)
	addq.l #1,d4
	move.w #1,a6
	jra .L333
.L340:
	btst #1,d0
	jeq .L353
	move.l _board+116,d2
	and.l #16776960,d2
	jeq .L412
.L353:
	btst #0,d0
	jeq .L395
.L420:
	move.l _board+112,d0
	and.l #16777215,d0
	jeq .L413
.L395:
	move.l _moveIndex,d0
	move.b _board+130,d1
	cmp.b #127,d1
	jeq .L315
.L421:
	move.b d1,d2
	lsr.b #4,d2
	cmp.b #2,d2
	jne .L315
	and.l #255,d1
	move.w #15,a1
	add.l d1,a1
	cmp.b #9,(a5,a1.l)
	jeq .L414
.L363:
	move.w #17,a1
	add.l d1,a1
	cmp.b #9,(a5,a1.l)
	jne .L315
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	lsl.l #8,d1
	move.l a1,d2
	or.l d2,d1
	or.l #538509312,d1
	move.l d1,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	movem.l (sp)+,#31996
	lea (16,sp),sp
	rts
.L410:
	move.l #900000,8(a0)
	addq.l #1,d4
	move.w #1,a6
	jra .L333
.L408:
	move.l #900000,8(a0)
	addq.l #1,d4
	move.w #1,a6
	jra .L327
.L409:
	move.l #800000,8(a0)
	addq.l #1,d4
	move.w #1,a6
	jra .L327
.L411:
	move.l #800000,8(a0)
	addq.l #1,d4
	move.w #1,a6
	jra .L333
.L405:
	and.l #255,d1
	move.w #-17,a1
	add.l d1,a1
	cmp.b #1,(a5,a1.l)
	jeq .L415
	move.w #-15,a1
	add.l d1,a1
	cmp.b #1,(a5,a1.l)
	jne .L315
.L422:
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	lsl.l #8,d1
	move.l a1,d2
	or.l d2,d1
	or.l #546373632,d1
	move.l d1,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	movem.l (sp)+,#31996
	lea (16,sp),sp
	rts
.L403:
	pea 4.w
	pea 8.w
	lea _isAttacked,a2
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jeq .L416
.L392:
	move.b _board+129,d0
.L424:
	btst #2,d0
	jeq .L393
	jra .L417
.L404:
	pea 4.w
	lea _board,a3
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	lea _isAttacked,a2
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L393
	pea 3.w
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L393
	pea 2.w
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L393
	move.l _moveIndex,d0
	move.l d0,d1
	add.l d0,d1
	add.l d0,d1
	add.l d1,d1
	add.l d1,d1
	move.l _moveList,a0
	move.l #268567044,(a0,d1.l)
	addq.l #1,d0
	move.l d0,_moveIndex
	move.b 130(a3),d1
	cmp.b #127,d1
	jne .L418
	jra .L315
.L412:
	pea 116.w
	move.b d1,d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	lea _isAttacked,a2
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jeq .L419
.L394:
	move.b _board+129,d0
.L423:
	btst #0,d0
	jeq .L395
	jra .L420
.L413:
	pea 116.w
	lea _board,a3
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	lea _isAttacked,a2
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L395
	pea 115.w
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L395
	pea 114.w
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L395
	move.l _moveIndex,d0
	move.l d0,d1
	add.l d0,d1
	add.l d0,d1
	add.l d1,d1
	add.l d1,d1
	move.l _moveList,a0
	move.l #269120116,(a0,d1.l)
	addq.l #1,d0
	move.l d0,_moveIndex
	move.b 130(a3),d1
	cmp.b #127,d1
	jne .L421
	jra .L315
.L414:
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	move.l d1,d2
	lsl.l #8,d2
	move.l a1,d3
	or.l d3,d2
	or.l #538509312,d2
	move.l d2,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	jra .L363
.L415:
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	move.l d1,d2
	lsl.l #8,d2
	move.l a1,d3
	or.l d3,d2
	or.l #546373632,d2
	move.l d2,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	move.w #-15,a1
	add.l d1,a1
	cmp.b #1,(a5,a1.l)
	jne .L315
	jra .L422
.L419:
	pea 117.w
	lea _board,a3
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L394
	pea 118.w
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L394
	move.l _moveIndex,d1
	move.l d1,d0
	add.l d1,d0
	add.l d1,d0
	add.l d0,d0
	add.l d0,d0
	move.l _moveList,a0
	move.l #269121140,(a0,d0.l)
	addq.l #1,d1
	move.l d1,_moveIndex
	move.b 129(a3),d0
	jra .L423
.L416:
	pea 5.w
	lea _board,a3
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L392
	pea 6.w
	move.b 128(a3),d0
	eor.b #8,d0
	and.l #255,d0
	move.l d0,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jne .L392
	move.l _moveIndex,d1
	move.l d1,d0
	add.l d1,d0
	add.l d1,d0
	add.l d0,d0
	add.l d0,d0
	move.l _moveList,a0
	move.l #268568068,(a0,d0.l)
	addq.l #1,d1
	move.l d1,_moveIndex
	move.b 129(a3),d0
	jra .L424
.L407:
	move.l d4,_moveIndex
	move.b d2,d1
	jra .L425
	.align	2
	.globl	_dummyPerft
_dummyPerft:
	link.w a5,#-18508
	movem.l #16186,-(sp)
	move.b 11(a5),-18497(a5)
	jne .L464
	clr.l -18452(a5)
	move.l #1,-18448(a5)
.L426:
	move.l -18452(a5),d0
	move.l -18448(a5),d1
	movem.l -18548(a5),#23804
	unlk a5
	rts
.L464:
	pea -18432(a5)
	lea _generateMoves,a3
	jsr (a3)
	move.l d0,-18436(a5)
	addq.l #4,sp
	clr.l -18452(a5)
	clr.l -18448(a5)
	tst.l d0
	jle .L426
	clr.l -18440(a5)
	move.b -18497(a5),d0
	subq.b #6,d0
	and.l #255,d0
	move.l d0,a6
	cmp.b #1,-18497(a5)
	jne .L465
.L441:
	clr.l -18464(a5)
	move.l #1,-18460(a5)
.L428:
	move.l -18464(a5),d0
	move.l -18460(a5),d1
	add.l d1,-18448(a5)
	move.l -18452(a5),d2
	addx.l d0,d2
	move.l d2,-18452(a5)
	addq.l #1,-18440(a5)
	move.l -18436(a5),d2
	cmp.l -18440(a5),d2
	jeq .L426
.L459:
	cmp.b #1,-18497(a5)
	jeq .L441
.L465:
	pea -15360(a5)
	jsr (a3)
	move.l d0,-18444(a5)
	addq.l #4,sp
	jle .L442
	clr.l -18456(a5)
	clr.l -18464(a5)
	clr.l -18460(a5)
	cmp.b #2,-18497(a5)
	jne .L466
.L443:
	clr.l -18476(a5)
	move.l #1,-18472(a5)
.L429:
	move.l -18476(a5),d0
	move.l -18472(a5),d1
	add.l d1,-18460(a5)
	move.l -18464(a5),d2
	addx.l d0,d2
	move.l d2,-18464(a5)
	addq.l #1,-18456(a5)
	move.l -18444(a5),d2
	cmp.l -18456(a5),d2
	jeq .L428
.L460:
	cmp.b #2,-18497(a5)
	jeq .L443
.L466:
	pea -12288(a5)
	jsr (a3)
	move.l d0,-18468(a5)
	addq.l #4,sp
	jle .L444
	clr.l -18480(a5)
	clr.l -18476(a5)
	clr.l -18472(a5)
	cmp.b #3,-18497(a5)
	jne .L467
.L445:
	clr.l -18492(a5)
	move.l #1,-18488(a5)
.L430:
	move.l -18492(a5),d0
	move.l -18488(a5),d1
	add.l d1,-18472(a5)
	move.l -18476(a5),d2
	addx.l d0,d2
	move.l d2,-18476(a5)
	addq.l #1,-18480(a5)
	move.l -18468(a5),d2
	cmp.l -18480(a5),d2
	jeq .L429
.L461:
	cmp.b #3,-18497(a5)
	jeq .L445
.L467:
	pea -9216(a5)
	jsr (a3)
	move.l d0,-18484(a5)
	addq.l #4,sp
	jle .L446
	clr.l -18496(a5)
	clr.l -18492(a5)
	clr.l -18488(a5)
	cmp.b #4,-18497(a5)
	jne .L468
.L447:
	clr.l d6
	moveq #1,d7
.L431:
	add.l d7,-18488(a5)
	move.l -18492(a5),d0
	addx.l d6,d0
	move.l d0,-18492(a5)
	addq.l #1,-18496(a5)
	move.l -18484(a5),d2
	cmp.l -18496(a5),d2
	jeq .L430
.L462:
	cmp.b #4,-18497(a5)
	jeq .L447
.L468:
	pea -6144(a5)
	jsr (a3)
	move.l d0,a0
	addq.l #4,sp
	tst.l d0
	jle .L448
	sub.l a4,a4
	clr.l d6
	clr.l d7
	lea _dummyPerft,a2
	cmp.b #5,-18497(a5)
	jne .L469
.L449:
	clr.l d4
	moveq #1,d5
	add.l d5,d7
	addx.l d4,d6
	addq.l #1,a4
	cmp.l a0,a4
	jeq .L431
.L463:
	cmp.b #5,-18497(a5)
	jeq .L449
.L469:
	pea -3072(a5)
	move.l a0,-18506(a5)
	jsr (a3)
	move.l d0,d3
	addq.l #4,sp
	move.l -18506(a5),a0
	jle .L450
	moveq #0,d2
	clr.l d4
	clr.l d5
	move.l a0,-18502(a5)
.L433:
	move.l a6,-(sp)
	jsr (a2)
	add.l d1,d5
	addx.l d0,d4
	addq.l #1,d2
	addq.l #4,sp
	cmp.l d3,d2
	jne .L433
	move.l -18502(a5),a0
	add.l d5,d7
	addx.l d4,d6
	addq.l #1,a4
	cmp.l a0,a4
	jne .L463
	jra .L431
.L450:
	clr.l d4
	clr.l d5
	add.l d5,d7
	addx.l d4,d6
	addq.l #1,a4
	cmp.l a0,a4
	jne .L463
	jra .L431
.L448:
	clr.l d6
	clr.l d7
	add.l d7,-18488(a5)
	move.l -18492(a5),d0
	addx.l d6,d0
	move.l d0,-18492(a5)
	addq.l #1,-18496(a5)
	cmp.l -18496(a5),d2
	jne .L462
	jra .L430
.L446:
	clr.l -18492(a5)
	clr.l -18488(a5)
	move.l -18492(a5),d0
	move.l -18488(a5),d1
	add.l d1,-18472(a5)
	move.l -18476(a5),d2
	addx.l d0,d2
	move.l d2,-18476(a5)
	addq.l #1,-18480(a5)
	cmp.l -18480(a5),d2
	jne .L461
	jra .L429
.L444:
	clr.l -18476(a5)
	clr.l -18472(a5)
	move.l -18476(a5),d0
	move.l -18472(a5),d1
	add.l d1,-18460(a5)
	move.l -18464(a5),d2
	addx.l d0,d2
	move.l d2,-18464(a5)
	addq.l #1,-18456(a5)
	cmp.l -18456(a5),d2
	jne .L460
	jra .L428
.L442:
	clr.l -18464(a5)
	clr.l -18460(a5)
	move.l -18464(a5),d0
	move.l -18460(a5),d1
	add.l d1,-18448(a5)
	move.l -18452(a5),d2
	addx.l d0,d2
	move.l d2,-18452(a5)
	addq.l #1,-18440(a5)
	cmp.l -18440(a5),d2
	jne .L459
	jra .L426
	.align	2
	.globl	_move_makeNull
_move_makeNull:
	move.l d3,-(sp)
	move.l d2,-(sp)
	move.l 12(sp),a0
	lea _board,a1
	move.b _board+131,5(a0)
	move.b _board+130,d1
	move.b d1,4(a0)
	move.b _board+129,6(a0)
	move.w _board+142,d0
	move.w d0,a0
	addq.w #1,a0
	move.w a0,_board+142
	move.l _board+134,d3
	move.l _board+138,d2
	move.w d0,a0
	moveq #18,d0
	add.l a0,d0
	lsl.l #3,d0
	move.l d3,(a1,d0.l)
	move.l d2,4(a1,d0.l)
	lea _board+128,a1
	eor.b #8,(a1)
	move.l _side,d0
	eor.l d0,d3
	move.l _side+4,d0
	eor.l d0,d2
	move.l d3,6(a1)
	move.l d2,10(a1)
	cmp.b #127,d1
	jeq .L471
	lea _pieceKeys,a0
	and.l #255,d1
	lsl.l #3,d1
	move.l (a0,d1.l),d0
	eor.l d3,d0
	move.l d0,6(a1)
	move.l 4(a0,d1.l),d1
	eor.l d2,d1
	move.l d1,10(a1)
.L471:
	move.b #127,_board+130
	addq.w #1,_board+132
	move.l (sp)+,d2
	move.l (sp)+,d3
	rts
	.align	2
	.globl	_move_unmakeNull
_move_unmakeNull:
	move.l d2,-(sp)
	move.l 8(sp),a0
	lea _board+128,a1
	eor.b #8,(a1)
	move.b 4(a0),2(a1)
	move.b 5(a0),3(a1)
	move.b 6(a0),1(a1)
	move.w 14(a1),d0
	subq.w #1,d0
	move.w d0,14(a1)
	move.w d0,a0
	moveq #18,d0
	add.l a0,d0
	lsl.l #3,d0
	lea _board,a0
	move.l (a0,d0.l),d1
	move.l 4(a0,d0.l),d2
	move.l d1,6(a1)
	move.l d2,10(a1)
	subq.w #1,4(a1)
	move.l (sp)+,d2
	rts
	.align	2
	.globl	_valuePiecePSQ
_valuePiecePSQ:
	move.l d2,-(sp)
	move.l 8(sp),d1
	move.l 12(sp),d2
	moveq #7,d0
	and.l d2,d0
	add.l d2,d0
	asr.l #1,d0
	moveq #15,d2
	cmp.l d1,d2
	jcs .L479
	add.l d1,d1
	move.w .L481(pc,d1.l),d1
	jmp %pc@(2,d1:w)
	.balignw 2,0x284c
.L481:
	.word .L479-.L481
	.word .L480-.L481
	.word .L492-.L481
	.word .L483-.L481
	.word .L479-.L481
	.word .L484-.L481
	.word .L485-.L481
	.word .L486-.L481
	.word .L479-.L481
	.word .L487-.L481
	.word .L492-.L481
	.word .L488-.L481
	.word .L479-.L481
	.word .L489-.L481
	.word .L490-.L481
	.word .L491-.L481
.L492:
	moveq #0,d0
	move.l (sp)+,d2
	rts
.L483:
	add.l d0,d0
	add.l d0,d0
	lea _psq_knights,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L484:
	add.l d0,d0
	add.l d0,d0
	lea _psq_bishops,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L485:
	add.l d0,d0
	add.l d0,d0
	lea _psq_rooks,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L486:
	add.l d0,d0
	add.l d0,d0
	lea _psq_queens,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L487:
	move.w #64,a0
	add.l d0,a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_pawns,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L488:
	move.w #64,a0
	add.l d0,a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_knights,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L489:
	move.w #64,a0
	add.l d0,a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_bishops,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L490:
	move.w #64,a0
	add.l d0,a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_rooks,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L491:
	move.w #64,a0
	add.l d0,a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_queens,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L480:
	add.l d0,d0
	add.l d0,d0
	lea _psq_pawns,a0
	move.l (a0,d0.l),d0
	move.l (sp)+,d2
	rts
.L479:
	moveq #20,d0
	move.l (sp)+,d2
	rts
	.align	2
	.globl	_move_make
_move_make:
	lea (-32,sp),sp
	movem.l #16190,-(sp)
	move.l 80(sp),a6
	lea _board,a3
	lea _board,a1
	move.b 131(a1),d1
	move.b d1,5(a6)
	move.b 130(a1),4(a6)
	move.b 129(a1),70(sp)
	move.b 70(sp),6(a6)
	move.w 142(a1),d2
	move.w d2,a0
	move.l 32364(a1),72(sp)
	move.l a0,d0
	add.l #2036,d0
	add.l d0,d0
	add.l d0,d0
	move.l 72(sp),(a3,d0.l)
	move.l 32368(a1),54(sp)
	move.l a0,d0
	add.l #3036,d0
	add.l d0,d0
	add.l d0,d0
	move.l 54(sp),(a3,d0.l)
	addq.w #1,d2
	move.w d2,142(a1)
	move.l 134(a1),d7
	moveq #18,d0
	add.l a0,d0
	lsl.l #3,d0
	move.l d7,(a3,d0.l)
	move.l 138(a1),4(a3,d0.l)
	addq.w #1,132(a1)
	move.b 128(a1),d0
	move.w d0,a4
	move.b d0,d2
	eor.b #8,d2
	move.b d2,128(a1)
	addq.b #1,d1
	move.b d1,131(a1)
	move.l (a6),d5
	moveq #0,d4
	not.b d4
	and.l d5,d4
	move.l d5,d0
	lsr.l #8,d0
	move.l d0,58(sp)
	moveq #0,d2
	not.b d2
	and.l d0,d2
	move.l d5,d1
	clr.w d1
	swap d1
	lsr.w #8,d1
	moveq #15,d0
	and.l d0,d1
	move.l d5,d0
	clr.w d0
	swap d0
	moveq #15,d3
	and.l d0,d3
	move.l d3,a0
	move.l d5,d3
	clr.w d3
	swap d3
	lsr.w #4,d3
	moveq #15,d6
	and.l d3,d6
	move.l d6,a5
	lea _pieceKeys,a2
	move.l a0,d3
	lsl.l #7,d3
	move.l d3,a1
	add.l d2,a1
	move.l a1,d6
	lsl.l #3,d6
	move.l (a2,d6.l),66(sp)
	move.l 4(a2,d6.l),46(sp)
	move.l _side,d6
	eor.l d7,d6
	move.l d6,50(sp)
	move.l _board+138,d7
	move.l _side+4,d6
	eor.l d6,d7
	move.l d7,a1
	add.l d4,d3
	lsl.l #3,d3
	move.l 50(sp),d7
	move.l (a2,d3.l),d6
	eor.l d6,d7
	move.l a1,d6
	move.l 4(a2,d3.l),d3
	eor.l d3,d6
	move.l 66(sp),d3
	eor.l d3,d7
	move.l 46(sp),d3
	eor.l d3,d6
	moveq #7,d3
	and.l d0,d3
	move.l d3,62(sp)
	subq.l #1,d3
	jeq .L496
	cmp.w #0,a5
	jeq .L497
.L496:
	clr.b _board+131
.L497:
	moveq #2,d0
	cmp.l 62(sp),d0
	jeq .L726
.L498:
	clr.b (a3,d4.l)
	tst.l d1
	jeq .L499
	move.l d1,d3
	lsl.l #7,d3
	add.l d2,d3
	lsl.l #3,d3
	move.l d3,a1
	move.l (a2,d3.l),d0
	move.l 66(sp),d3
	eor.l d3,d0
	move.l d0,66(sp)
	move.l 4(a2,a1.l),d3
	move.l 46(sp),d0
	eor.l d0,d3
	move.l 66(sp),d0
	eor.l d0,d7
	eor.l d3,d6
	move.b d1,(a3,d2.l)
	move.w a4,d0
	tst.b d0
	jeq .L727
	move.l d1,d0
	add.l d1,d0
	add.l d0,d0
	lea (a0,a0.l),a1
	add.l a1,a1
	move.l a1,66(sp)
	lea _matValues,a1
	move.l (a1,d0.l),d0
	move.l 66(sp),a1
	lea _matValues,a4
	sub.l (a1,a4.l),d0
	move.l d0,66(sp)
	moveq #7,d3
	and.l d5,d3
	add.l d4,d3
	asr.l #1,d3
	move.l a0,d0
	add.l d0,d0
	move.l d0,a0
	move.w .L530(pc,a0.l),a0
	jmp %pc@(2,a0:w)
	.balignw 2,0x284c
.L530:
	.word .L669-.L530
	.word .L529-.L530
	.word .L531-.L530
	.word .L532-.L530
	.word .L669-.L530
	.word .L533-.L530
	.word .L534-.L530
	.word .L535-.L530
	.word .L669-.L530
	.word .L536-.L530
	.word .L531-.L530
	.word .L537-.L530
	.word .L669-.L530
	.word .L538-.L530
	.word .L539-.L530
	.word .L540-.L530
.L499:
	move.w a0,d0
	move.b d0,(a3,d2.l)
	move.w a4,d0
	tst.b d0
	jeq .L728
	moveq #7,d0
	and.l 58(sp),d0
	move.l d2,d3
	add.l d0,d3
	move.l d3,d0
	asr.l #1,d0
	move.l d0,a4
	move.l a0,d0
	add.l d0,d0
	move.l d0,a1
	move.w .L583(pc,a1.l),a1
	jmp %pc@(2,a1:w)
	.balignw 2,0x284c
.L583:
	.word .L581-.L583
	.word .L582-.L583
	.word .L672-.L583
	.word .L585-.L583
	.word .L581-.L583
	.word .L586-.L583
	.word .L587-.L583
	.word .L588-.L583
	.word .L581-.L583
	.word .L589-.L583
	.word .L672-.L583
	.word .L590-.L583
	.word .L581-.L583
	.word .L591-.L583
	.word .L592-.L583
	.word .L593-.L583
.L726:
	move.l a0,d0
	lsr.l #1,d0
	moveq #4,d3
	and.l d0,d3
	move.l #_kingLoc,d0
	move.l d3,a1
	move.l d2,(a1,d0.l)
	jra .L498
.L728:
	moveq #7,d0
	and.l 58(sp),d0
	move.l d2,d3
	add.l d0,d3
	move.l d3,d0
	asr.l #1,d0
	move.l d0,a4
	move.l a0,d0
	add.l d0,d0
	move.l d0,a1
	move.w .L557(pc,a1.l),a1
	jmp %pc@(2,a1:w)
	.balignw 2,0x284c
.L557:
	.word .L555-.L557
	.word .L556-.L557
	.word .L671-.L557
	.word .L559-.L557
	.word .L555-.L557
	.word .L560-.L557
	.word .L561-.L557
	.word .L562-.L557
	.word .L555-.L557
	.word .L563-.L557
	.word .L671-.L557
	.word .L564-.L557
	.word .L555-.L557
	.word .L565-.L557
	.word .L566-.L557
	.word .L567-.L557
.L727:
	move.l d1,d0
	add.l d1,d0
	add.l d0,d0
	lea (a0,a0.l),a1
	add.l a1,a1
	move.l a1,66(sp)
	lea _matValues,a1
	move.l (a1,d0.l),d0
	move.l 66(sp),a1
	lea _matValues,a4
	sub.l (a1,a4.l),d0
	move.l d0,66(sp)
	moveq #7,d3
	and.l d5,d3
	add.l d4,d3
	asr.l #1,d3
	move.l a0,d0
	add.l d0,d0
	move.l d0,a0
	move.w .L503(pc,a0.l),a0
	jmp %pc@(2,a0:w)
	.balignw 2,0x284c
.L503:
	.word .L667-.L503
	.word .L502-.L503
	.word .L504-.L503
	.word .L505-.L503
	.word .L667-.L503
	.word .L506-.L503
	.word .L507-.L503
	.word .L508-.L503
	.word .L667-.L503
	.word .L509-.L503
	.word .L504-.L503
	.word .L510-.L503
	.word .L667-.L503
	.word .L511-.L503
	.word .L512-.L503
	.word .L513-.L503
.L672:
	move.w #-20,a1
.L584:
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	move.l a0,d0
	add.l d0,d0
	move.l d0,a0
	move.w .L605(pc,a0.l),a0
	jmp %pc@(2,a0:w)
	.balignw 2,0x284c
.L605:
	.word .L604-.L605
	.word .L689-.L605
	.word .L716-.L605
	.word .L690-.L605
	.word .L604-.L605
	.word .L691-.L605
	.word .L692-.L605
	.word .L693-.L605
	.word .L604-.L605
	.word .L694-.L605
	.word .L716-.L605
	.word .L695-.L605
	.word .L604-.L605
	.word .L696-.L605
	.word .L697-.L605
	.word .L698-.L605
.L695:
	lea _psq_knights,a1
.L603:
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	sub.l (a1,d0.l),d1
.L716:
	move.l d1,a1
.L604:
	move.l a1,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
.L527:
	lea _castleKeys,a0
	moveq #0,d0
	move.b 70(sp),d0
	lsl.l #3,d0
	move.l (a0,d0.l),d1
	eor.l d7,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	moveq #7,d0
	cmp.l d4,d0
	jeq .L608
.L743:
	cmp.l d4,d0
	jge .L729
	moveq #116,d0
	cmp.l d4,d0
	jeq .L612
	moveq #119,d0
	cmp.l d4,d0
	jeq .L613
	moveq #112,d0
	cmp.l d4,d0
	jeq .L730
.L607:
	moveq #7,d0
	cmp.l d2,d0
	jeq .L616
.L739:
	cmp.l d2,d0
	jge .L731
	moveq #116,d0
	cmp.l d2,d0
	jeq .L620
	moveq #119,d0
	cmp.l d2,d0
	jeq .L621
	moveq #112,d0
	cmp.l d2,d0
	jeq .L732
.L615:
	moveq #0,d0
	move.b 70(sp),d0
	lsl.l #3,d0
	move.l (a0,d0.l),d7
	eor.l d7,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	lea _board+117,a0
	move.l d1,17(a0)
	move.l d6,21(a0)
	moveq #28,d0
	lsr.l d0,d5
	subq.l #1,d5
	jne .L624
	moveq #6,d0
	cmp.l d2,d0
	jeq .L733
	moveq #2,d0
	cmp.l d2,d0
	jeq .L734
	moveq #118,d0
	cmp.l d2,d0
	jne .L627
	clr.b 2(a0)
	move.b #14,(a0)
	lea _pieceKeys,a1
	move.l 15288(a1),d5
	move.l 15272(a1),d0
	eor.l d0,d5
	move.l 15292(a1),d0
	move.l 15276(a1),d7
	eor.l d7,d0
	eor.l d5,d1
	eor.l d0,d6
	move.l d1,17(a0)
	move.l d6,21(a0)
.L624:
	move.b 4(a6),d0
	cmp.b #127,d0
	jeq .L628
	and.l #255,d0
	lsl.l #3,d0
	move.l (a2,d0.l),d5
	eor.l d1,d5
	move.l d5,_board+134
	move.l 4(a2,d0.l),d0
	eor.l d6,d0
	move.l d0,_board+138
.L628:
	moveq #1,d0
	cmp.l 62(sp),d0
	jeq .L735
.L629:
	move.b #127,_board+130
	move.l (a6),d0
	moveq #28,d1
	lsr.l d1,d0
	subq.l #2,d0
	jeq .L736
.L631:
	cmp.w #0,a5
	jeq .L678
	move.l a5,d0
	lsl.l #7,d0
	add.l d0,d2
	lsl.l #3,d2
	move.l (a2,d2.l),d0
	eor.l d0,_board+134
	move.l 4(a2,d2.l),d2
	eor.l d2,_board+138
	move.l a5,d0
	add.l a5,d0
	add.l d0,d0
	lea _matValues,a0
	cmp.b #8,_board+128.l
	jeq .L737
	move.l (a0,d0.l),d1
	asr.l #1,d3
	move.l a5,d0
	add.l d0,d0
	move.w .L653(pc,d0.l),d0
	jmp %pc@(2,d0:w)
	.balignw 2,0x284c
.L653:
	.word .L651-.L653
	.word .L652-.L653
	.word .L674-.L653
	.word .L655-.L653
	.word .L651-.L653
	.word .L656-.L653
	.word .L657-.L653
	.word .L658-.L653
	.word .L651-.L653
	.word .L659-.L653
	.word .L674-.L653
	.word .L660-.L653
	.word .L651-.L653
	.word .L661-.L653
	.word .L662-.L653
	.word .L663-.L653
.L732:
	move.b 70(sp),d0
	and.b #14,d0
	lea _board+129,a1
	move.b d0,(a1)
	and.l #255,d0
	lsl.l #3,d0
	move.l (a0,d0.l),d5
	eor.l d5,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	move.l d1,5(a1)
	move.l d6,9(a1)
	jra .L624
.L735:
	move.l d2,d0
	sub.l d4,d0
	move.l d0,-(sp)
	jsr _abs
	addq.l #4,sp
	moveq #32,d1
	cmp.l d0,d1
	jne .L629
	add.l d2,d4
	asr.l #1,d4
	move.b d4,_board+130
	lsl.l #3,d4
	move.l (a2,d4.l),d0
	eor.l d0,_board+134
	move.l 4(a2,d4.l),d4
	eor.l d4,_board+138
	move.l (a6),d0
	moveq #28,d1
	lsr.l d1,d0
	subq.l #2,d0
	jne .L631
.L736:
	cmp.b #8,_board+128.l
	jeq .L738
	moveq #16,d1
	add.l d2,d1
	clr.b (a3,d1.l)
	add.l #144,d2
	lsl.l #3,d2
	move.l (a2,d2.l),d0
	eor.l d0,_board+134
	move.l 4(a2,d2.l),d2
	eor.l d2,_board+138
	moveq #7,d0
	and.l d1,d0
	add.l d1,d0
	and.l #1022,d0
	add.l d0,d0
	lea _psq_pawns,a0
	move.l (a0,d0.l),d0
	add.l _matValues+4,d0
	sub.l d0,_board+32364
.L678:
	moveq #0,d0
	movem.l (sp)+,#31996
	lea (32,sp),sp
	rts
.L730:
	and.b #14,70(sp)
	move.b 70(sp),_board+129
	moveq #7,d0
	cmp.l d2,d0
	jne .L739
.L616:
	move.b 70(sp),d0
	and.b #7,d0
	lea _board+129,a1
	move.b d0,(a1)
	and.l #255,d0
	lsl.l #3,d0
	move.l (a0,d0.l),d5
	eor.l d5,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	move.l d1,5(a1)
	move.l d6,9(a1)
	jra .L624
.L674:
	moveq #0,d0
	add.l d0,d1
	sub.l d1,_board+32364
	move.l a5,d0
	subq.l #1,d0
	moveq #1,d1
	cmp.l d0,d1
	jcc .L678
.L666:
	subq.l #1,_board+32388
.L740:
	moveq #0,d0
	movem.l (sp)+,#31996
	lea (32,sp),sp
	rts
.L652:
	add.l d3,d3
	add.l d3,d3
	lea _psq_pawns,a0
	add.l (a0,d3.l),d1
	sub.l d1,_board+32364
	moveq #0,d0
	movem.l (sp)+,#31996
	lea (32,sp),sp
	rts
.L662:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_rooks,a0
	move.l (a0,d2.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
.L741:
	subq.l #1,_board+32388
	jra .L740
.L661:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_bishops,a0
	move.l (a0,d2.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L660:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_knights,a0
	move.l (a0,d2.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L659:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_pawns,a0
	move.l (a0,d2.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L658:
	add.l d3,d3
	add.l d3,d3
	lea _psq_queens,a0
	move.l (a0,d3.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L657:
	add.l d3,d3
	add.l d3,d3
	lea _psq_rooks,a0
	move.l (a0,d3.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L656:
	add.l d3,d3
	add.l d3,d3
	lea _psq_bishops,a0
	move.l (a0,d3.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L655:
	add.l d3,d3
	add.l d3,d3
	lea _psq_knights,a0
	move.l (a0,d3.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L663:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_queens,a0
	move.l (a0,d2.l),d0
	add.l d0,d1
	sub.l d1,_board+32364
	jra .L741
.L589:
	lea _psq_pawns,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
.L742:
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	sub.l (a1,d0.l),d1
	jra .L716
.L590:
	lea _psq_knights,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L742
.L529:
	add.l d3,d3
	add.l d3,d3
	lea _psq_pawns,a0
	move.l (a0,d3.l),a0
.L528:
	move.l 66(sp),a1
	sub.l a0,a1
	move.l a1,a0
	moveq #7,d0
	and.l 58(sp),d0
	move.l d2,d3
	add.l d0,d3
	move.l d3,d0
	asr.l #1,d0
	move.l d0,a1
	moveq #15,d0
	cmp.l d1,d0
	jcs .L670
	add.l d1,d1
	move.w .L543(pc,d1.l),d1
	jmp %pc@(2,d1:w)
	.balignw 2,0x284c
.L543:
	.word .L670-.L543
	.word .L710-.L543
	.word .L544-.L543
	.word .L712-.L543
	.word .L670-.L543
	.word .L711-.L543
	.word .L713-.L543
	.word .L714-.L543
	.word .L670-.L543
	.word .L549-.L543
	.word .L544-.L543
	.word .L550-.L543
	.word .L670-.L543
	.word .L551-.L543
	.word .L552-.L543
	.word .L553-.L543
.L531:
	sub.l a0,a0
	jra .L528
.L532:
	add.l d3,d3
	add.l d3,d3
	lea _psq_knights,a0
	move.l (a0,d3.l),a0
	jra .L528
.L533:
	add.l d3,d3
	add.l d3,d3
	lea _psq_bishops,a0
	move.l (a0,d3.l),a0
	jra .L528
.L534:
	add.l d3,d3
	add.l d3,d3
	lea _psq_rooks,a0
	move.l (a0,d3.l),a0
	jra .L528
.L535:
	add.l d3,d3
	add.l d3,d3
	lea _psq_queens,a0
	move.l (a0,d3.l),a0
	jra .L528
.L536:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_pawns,d0
	move.l (a0,d0.l),a0
	jra .L528
.L537:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_knights,d0
	move.l (a0,d0.l),a0
	jra .L528
.L538:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_bishops,d0
	move.l (a0,d0.l),a0
	jra .L528
.L539:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_rooks,d0
	move.l (a0,d0.l),a0
	jra .L528
.L585:
	lea _psq_knights,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
.L598:
	move.l a1,d0
	add.l a1,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
.L748:
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	jra .L527
.L586:
	lea _psq_bishops,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L598
.L587:
	lea _psq_rooks,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L598
.L588:
	lea _psq_queens,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L598
.L540:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_queens,d0
	move.l (a0,d0.l),a0
	jra .L528
.L582:
	lea _psq_pawns,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L598
.L592:
	lea _psq_rooks,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L742
.L593:
	lea _psq_queens,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L742
.L591:
	lea _psq_bishops,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L742
.L553:
	lea (64,a1),a1
.L714:
	move.l a1,d0
	add.l a1,d0
	add.l d0,d0
	lea _psq_queens,a1
	move.l (a1,d0.l),d0
	add.l d0,a0
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	addq.l #1,_board+32392
.L744:
	lea _castleKeys,a0
	moveq #0,d0
	move.b 70(sp),d0
	lsl.l #3,d0
	move.l (a0,d0.l),d1
	eor.l d7,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	moveq #7,d0
	cmp.l d4,d0
	jne .L743
.L608:
	and.b #7,70(sp)
	move.b 70(sp),_board+129
	jra .L607
.L552:
	lea (64,a1),a1
.L713:
	move.l a1,d0
	add.l a1,d0
	add.l d0,d0
	lea _psq_rooks,a1
	move.l (a1,d0.l),d0
	add.l d0,a0
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	addq.l #1,_board+32392
	jra .L744
.L551:
	lea (64,a1),a1
.L711:
	move.l a1,d0
	add.l a1,d0
	add.l d0,d0
	lea _psq_bishops,a1
	move.l (a1,d0.l),d0
	add.l d0,a0
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	addq.l #1,_board+32392
	jra .L744
.L550:
	lea (64,a1),a1
.L712:
	move.l a1,d0
	add.l a1,d0
	add.l d0,d0
	lea _psq_knights,a1
	move.l (a1,d0.l),d0
	add.l d0,a0
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	addq.l #1,_board+32392
	jra .L744
.L549:
	lea (64,a1),a1
.L710:
	move.l a1,d0
	add.l a1,d0
	add.l d0,d0
	lea _psq_pawns,a1
	move.l (a1,d0.l),d0
	add.l d0,a0
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	addq.l #1,_board+32392
	jra .L744
.L544:
	moveq #0,d0
	add.l d0,a0
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	addq.l #1,_board+32392
	jra .L744
.L651:
	moveq #20,d0
	add.l d0,d1
	sub.l d1,_board+32364
	move.l a5,d0
	subq.l #1,d0
	moveq #1,d1
	cmp.l d0,d1
	jcc .L678
	jra .L666
.L581:
	sub.l a1,a1
	moveq #20,d1
	jra .L584
.L669:
	move.w #20,a0
	jra .L528
.L670:
	moveq #20,d0
	add.l d0,a0
	move.l a0,d0
	add.l d0,54(sp)
	move.l 54(sp),_board+32368
	addq.l #1,_board+32392
	jra .L744
.L671:
	move.w #-20,a1
.L558:
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	move.l a0,d0
	add.l d0,d0
	move.l d0,a0
	move.w .L579(pc,a0.l),a0
	jmp %pc@(2,a0:w)
	.balignw 2,0x284c
.L579:
	.word .L578-.L579
	.word .L679-.L579
	.word .L715-.L579
	.word .L680-.L579
	.word .L578-.L579
	.word .L681-.L579
	.word .L682-.L579
	.word .L683-.L579
	.word .L578-.L579
	.word .L684-.L579
	.word .L715-.L579
	.word .L685-.L579
	.word .L578-.L579
	.word .L686-.L579
	.word .L687-.L579
	.word .L688-.L579
.L685:
	lea _psq_knights,a1
.L577:
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	sub.l (a1,d0.l),d1
.L715:
	move.l d1,a1
.L578:
	move.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	jra .L527
.L506:
	add.l d3,d3
	add.l d3,d3
	lea _psq_bishops,a0
	move.l (a0,d3.l),a0
.L501:
	move.l 66(sp),a1
	sub.l a0,a1
	moveq #7,d0
	and.l 58(sp),d0
	move.l d2,d3
	add.l d0,d3
	move.l d3,d0
	asr.l #1,d0
	move.l d0,a0
	moveq #15,d0
	cmp.l d1,d0
	jcs .L668
	add.l d1,d1
	move.w .L516(pc,d1.l),d1
	jmp %pc@(2,d1:w)
	.balignw 2,0x284c
.L516:
	.word .L668-.L516
	.word .L705-.L516
	.word .L517-.L516
	.word .L707-.L516
	.word .L668-.L516
	.word .L706-.L516
	.word .L708-.L516
	.word .L709-.L516
	.word .L668-.L516
	.word .L522-.L516
	.word .L517-.L516
	.word .L523-.L516
	.word .L668-.L516
	.word .L524-.L516
	.word .L525-.L516
	.word .L526-.L516
.L505:
	add.l d3,d3
	add.l d3,d3
	lea _psq_knights,a0
	move.l (a0,d3.l),a0
	jra .L501
.L504:
	sub.l a0,a0
	jra .L501
.L502:
	add.l d3,d3
	add.l d3,d3
	lea _psq_pawns,a0
	move.l (a0,d3.l),a0
	jra .L501
.L567:
	lea _psq_queens,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
.L745:
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	sub.l (a1,d0.l),d1
	jra .L715
.L566:
	lea _psq_rooks,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L745
.L565:
	lea _psq_bishops,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L745
.L556:
	lea _psq_pawns,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
.L572:
	move.l a1,d0
	add.l a1,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
.L749:
	move.l a0,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	jra .L527
.L560:
	lea _psq_bishops,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L572
.L510:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_knights,d0
	move.l (a0,d0.l),a0
	jra .L501
.L509:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_pawns,d0
	move.l (a0,d0.l),a0
	jra .L501
.L508:
	add.l d3,d3
	add.l d3,d3
	lea _psq_queens,a0
	move.l (a0,d3.l),a0
	jra .L501
.L507:
	add.l d3,d3
	add.l d3,d3
	lea _psq_rooks,a0
	move.l (a0,d3.l),a0
	jra .L501
.L512:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_rooks,d0
	move.l (a0,d0.l),a0
	jra .L501
.L511:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_bishops,d0
	move.l (a0,d0.l),a0
	jra .L501
.L513:
	move.w #64,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_psq_queens,d0
	move.l (a0,d0.l),a0
	jra .L501
.L564:
	lea _psq_knights,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L745
.L563:
	lea _psq_pawns,a1
	lea (64,a4),a0
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	move.l (a1,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a4
	jra .L745
.L562:
	lea _psq_queens,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L572
.L561:
	lea _psq_rooks,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L572
.L559:
	lea _psq_knights,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	move.l (a0,d0.l),d1
	moveq #7,d0
	and.l d5,d0
	add.l d4,d0
	asr.l #1,d0
	move.l d0,a1
	jra .L572
.L522:
	lea (64,a0),a0
.L705:
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_pawns,a0
	move.l (a0,d0.l),d0
	add.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	addq.l #1,_board+32388
	jra .L527
.L526:
	lea (64,a0),a0
.L709:
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_queens,a0
	move.l (a0,d0.l),d0
	add.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	addq.l #1,_board+32388
	jra .L527
.L525:
	lea (64,a0),a0
.L708:
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_rooks,a0
	move.l (a0,d0.l),d0
	add.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	addq.l #1,_board+32388
	jra .L527
.L524:
	lea (64,a0),a0
.L706:
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_bishops,a0
	move.l (a0,d0.l),d0
	add.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	addq.l #1,_board+32388
	jra .L527
.L523:
	lea (64,a0),a0
.L707:
	move.l a0,d0
	add.l a0,d0
	add.l d0,d0
	lea _psq_knights,a0
	move.l (a0,d0.l),d0
	add.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	addq.l #1,_board+32388
	jra .L527
.L517:
	moveq #0,d0
	add.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	addq.l #1,_board+32388
	jra .L527
.L555:
	sub.l a1,a1
	moveq #20,d1
	jra .L558
.L667:
	move.w #20,a0
	jra .L501
.L668:
	moveq #20,d0
	add.l a1,d0
	add.l d0,72(sp)
	move.l 72(sp),_board+32364
	addq.l #1,_board+32388
	jra .L527
.L731:
	tst.l d2
	jeq .L618
	moveq #4,d0
	cmp.l d2,d0
	jne .L615
	move.b 70(sp),d0
	and.b #-13,d0
	lea _board+129,a1
	move.b d0,(a1)
	and.l #255,d0
	lsl.l #3,d0
	move.l (a0,d0.l),d5
	eor.l d5,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	move.l d1,5(a1)
	move.l d6,9(a1)
	jra .L624
.L729:
	tst.l d4
	jeq .L610
	moveq #4,d0
	cmp.l d4,d0
	jne .L607
	and.b #3,70(sp)
	move.b 70(sp),_board+129
	jra .L607
.L737:
	move.l (a0,d0.l),d0
	asr.l #1,d3
	move.l a5,d1
	add.l d1,d1
	move.w .L638(pc,d1.l),d1
	jmp %pc@(2,d1:w)
	.balignw 2,0x284c
.L638:
	.word .L636-.L638
	.word .L637-.L638
	.word .L673-.L638
	.word .L640-.L638
	.word .L636-.L638
	.word .L641-.L638
	.word .L642-.L638
	.word .L643-.L638
	.word .L636-.L638
	.word .L644-.L638
	.word .L673-.L638
	.word .L645-.L638
	.word .L636-.L638
	.word .L646-.L638
	.word .L647-.L638
	.word .L648-.L638
.L673:
	moveq #0,d1
	add.l d1,d0
	sub.l d0,_board+32368
	lea (-9,a5),a5
	moveq #1,d0
	cmp.l a5,d0
	jcc .L678
.L665:
	subq.l #1,_board+32392
.L746:
	moveq #0,d0
	movem.l (sp)+,#31996
	lea (32,sp),sp
	rts
.L637:
	add.l d3,d3
	add.l d3,d3
	lea _psq_pawns,a0
	move.l (a0,d3.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
.L747:
	subq.l #1,_board+32392
	jra .L746
.L648:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_queens,a0
	move.l (a0,d2.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L647:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_rooks,a0
	move.l (a0,d2.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L646:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_bishops,a0
	move.l (a0,d2.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L645:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d2
	add.l a0,d2
	add.l d2,d2
	lea _psq_knights,a0
	move.l (a0,d2.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L644:
	move.w #64,a0
	add.l d3,a0
	move.l a0,d1
	add.l a0,d1
	add.l d1,d1
	lea _psq_pawns,a0
	add.l (a0,d1.l),d0
	sub.l d0,_board+32368
	moveq #0,d0
	movem.l (sp)+,#31996
	lea (32,sp),sp
	rts
.L643:
	add.l d3,d3
	add.l d3,d3
	lea _psq_queens,a0
	move.l (a0,d3.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L642:
	add.l d3,d3
	add.l d3,d3
	lea _psq_rooks,a0
	move.l (a0,d3.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L641:
	add.l d3,d3
	add.l d3,d3
	lea _psq_bishops,a0
	move.l (a0,d3.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L640:
	add.l d3,d3
	add.l d3,d3
	lea _psq_knights,a0
	move.l (a0,d3.l),d1
	add.l d1,d0
	sub.l d0,_board+32368
	jra .L747
.L636:
	moveq #20,d1
	add.l d1,d0
	sub.l d0,_board+32368
	lea (-9,a5),a5
	moveq #1,d0
	cmp.l a5,d0
	jcc .L678
	jra .L665
.L621:
	move.b 70(sp),d0
	and.b #13,d0
	lea _board+129,a1
	move.b d0,(a1)
	and.l #255,d0
	lsl.l #3,d0
	move.l (a0,d0.l),d5
	eor.l d5,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	move.l d1,5(a1)
	move.l d6,9(a1)
	jra .L624
.L620:
	move.b 70(sp),d0
	and.b #12,d0
	lea _board+129,a1
	move.b d0,(a1)
	and.l #255,d0
	lsl.l #3,d0
	move.l (a0,d0.l),d5
	eor.l d5,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	move.l d1,5(a1)
	move.l d6,9(a1)
	jra .L624
.L610:
	and.b #11,70(sp)
	move.b 70(sp),_board+129
	jra .L607
.L612:
	and.b #12,70(sp)
	move.b 70(sp),_board+129
	jra .L607
.L618:
	move.b 70(sp),d0
	and.b #11,d0
	lea _board+129,a1
	move.b d0,(a1)
	and.l #255,d0
	lsl.l #3,d0
	move.l (a0,d0.l),d5
	eor.l d5,d1
	move.l 4(a0,d0.l),d0
	eor.l d0,d6
	move.l d1,5(a1)
	move.l d6,9(a1)
	jra .L624
.L613:
	and.b #13,70(sp)
	move.b 70(sp),_board+129
	jra .L607
.L733:
	lea _board+5,a0
	clr.b 2(a0)
	move.b #6,(a0)
	lea _pieceKeys,a1
	move.l 6200(a1),d5
	move.l 6184(a1),d0
	eor.l d0,d5
	move.l 6204(a1),d0
	move.l 6188(a1),d7
	eor.l d7,d0
	eor.l d5,d1
	eor.l d0,d6
	move.l d1,129(a0)
	move.l d6,133(a0)
	jra .L624
.L738:
	moveq #-16,d1
	add.l d2,d1
	clr.b (a3,d1.l)
	add.l #1136,d2
	lsl.l #3,d2
	move.l (a2,d2.l),d0
	eor.l d0,_board+134
	move.l 4(a2,d2.l),d2
	eor.l d2,_board+138
	moveq #7,d0
	and.l d1,d0
	add.l d1,d0
	moveq #-2,d1
	and.l d1,d0
	add.l #128,d0
	add.l d0,d0
	lea _psq_pawns,a0
	move.l (a0,d0.l),d0
	add.l _matValues+36,d0
	sub.l d0,_board+32368
	moveq #0,d0
	movem.l (sp)+,#31996
	lea (32,sp),sp
	rts
.L734:
	lea _board,a0
	clr.b (a0)
	move.b #6,3(a0)
	lea _pieceKeys,a1
	move.l 6144(a1),d5
	move.l 6168(a1),d0
	eor.l d0,d5
	move.l 6148(a1),d0
	move.l 6172(a1),d7
	eor.l d7,d0
	eor.l d5,d1
	eor.l d0,d6
	move.l d1,134(a0)
	move.l d6,138(a0)
	move.l 72(sp),d0
	addq.l #5,d0
	move.l d0,32364(a0)
	jra .L624
.L627:
	moveq #114,d0
	cmp.l d2,d0
	jne .L624
	lea _board+112,a0
	clr.b (a0)
	move.b #14,3(a0)
	move.l 54(sp),d0
	subq.l #5,d0
	move.l d0,32256(a0)
	lea _pieceKeys,a1
	move.l 15232(a1),d5
	move.l 15256(a1),d0
	eor.l d0,d5
	move.l 15236(a1),d0
	move.l 15260(a1),d7
	eor.l d7,d0
	eor.l d5,d1
	eor.l d0,d6
	move.l d1,22(a0)
	move.l d6,26(a0)
	jra .L624
.L689:
	lea _psq_pawns,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L748
.L698:
	lea _psq_queens,a1
	jra .L603
.L679:
	lea _psq_pawns,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L749
.L688:
	lea _psq_queens,a1
	jra .L577
.L687:
	lea _psq_rooks,a1
	jra .L577
.L686:
	lea _psq_bishops,a1
	jra .L577
.L684:
	lea _psq_pawns,a1
	jra .L577
.L683:
	lea _psq_queens,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L749
.L682:
	lea _psq_rooks,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L749
.L681:
	lea _psq_bishops,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L749
.L680:
	lea _psq_knights,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L749
.L697:
	lea _psq_rooks,a1
	jra .L603
.L696:
	lea _psq_bishops,a1
	jra .L603
.L694:
	lea _psq_pawns,a1
	jra .L603
.L693:
	lea _psq_queens,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L748
.L692:
	lea _psq_rooks,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L748
.L691:
	lea _psq_bishops,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L748
.L690:
	lea _psq_knights,a0
	move.l a4,d0
	add.l a4,d0
	add.l d0,d0
	sub.l (a0,d0.l),d1
	move.l d1,a0
	jra .L748
	.align	2
	.globl	_move_unmake
_move_unmake:
	movem.l #15904,-(sp)
	move.l 28(sp),a2
	lea _board,a1
	lea _board,a0
	move.b 128(a0),d3
	move.b d3,d0
	eor.b #8,d0
	move.b d0,128(a0)
	move.b 4(a2),130(a0)
	move.b 5(a2),131(a0)
	move.b 6(a2),129(a0)
	move.w _board+142,a0
	subq.w #1,a0
	move.w a0,_board+142
	move.w a0,a0
	moveq #18,d0
	add.l a0,d0
	lsl.l #3,d0
	move.l (a1,d0.l),d1
	move.l 4(a1,d0.l),d2
	move.l d1,_board+134
	move.l d2,_board+138
	move.l a0,d0
	add.l #2036,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a1,d0.l),_board+32364
	lea (3036,a0),a0
	add.l a0,a0
	add.l a0,a0
	move.l (a1,a0.l),_board+32368
	subq.w #1,_board+132
	move.l (a2),d0
	moveq #0,d4
	not.b d4
	and.l d0,d4
	move.l d0,d1
	lsr.l #8,d1
	moveq #0,d2
	not.b d2
	and.l d2,d1
	move.l d0,d2
	clr.w d2
	swap d2
	moveq #15,d5
	and.l d2,d5
	moveq #7,d6
	and.l d6,d2
	subq.l #2,d2
	jeq .L778
.L751:
	clr.b (a1,d1.l)
	move.b d5,(a1,d4.l)
	move.l d0,d2
	clr.w d2
	swap d2
	lsr.w #8,d2
	moveq #15,d4
	and.l d4,d2
	jeq .L752
	tst.b d3
	jeq .L779
	subq.l #1,_board+32388
	move.l d0,d2
	moveq #28,d3
	lsr.l d3,d2
	moveq #2,d3
	cmp.l d2,d3
	jeq .L756
	clr.w d0
	swap d0
	lsr.w #4,d0
	moveq #15,d3
	and.l d3,d0
	jne .L757
.L763:
	subq.l #1,d2
	jne .L771
	moveq #6,d0
	cmp.l d1,d0
	jeq .L780
	moveq #2,d0
	cmp.l d1,d0
	jeq .L781
	moveq #118,d0
	cmp.l d1,d0
	jeq .L782
	moveq #114,d0
	cmp.l d1,d0
	jne .L771
	move.b #14,_board+112
	clr.b _board+115
.L771:
	moveq #0,d0
	movem.l (sp)+,#1148
	rts
.L752:
	move.l d0,d2
	moveq #28,d4
	lsr.l d4,d2
	moveq #2,d4
	cmp.l d2,d4
	jeq .L759
	clr.w d0
	swap d0
	lsr.w #4,d0
	moveq #15,d4
	and.l d4,d0
	jeq .L763
	move.b d0,(a1,d1.l)
	tst.b d3
	jeq .L768
.L764:
	move.w #-9,a0
	add.l d0,a0
	moveq #1,d0
	cmp.l a0,d0
	jcc .L763
	addq.l #1,_board+32392
	jra .L763
.L778:
	move.l d5,d2
	lsr.l #1,d2
	moveq #4,d6
	and.l d6,d2
	lea _kingLoc,a0
	move.l d4,(a0,d2.l)
	jra .L751
.L759:
	tst.b d3
	jeq .L761
.L756:
	move.b #9,-16(a1,d1.l)
	moveq #0,d0
	movem.l (sp)+,#1148
	rts
.L779:
	subq.l #1,_board+32392
	move.l d0,d2
	moveq #28,d3
	lsr.l d3,d2
	moveq #2,d3
	cmp.l d2,d3
	jeq .L761
	clr.w d0
	swap d0
	lsr.w #4,d0
	moveq #15,d3
	and.l d3,d0
	jeq .L763
	move.b d0,(a1,d1.l)
.L768:
	subq.l #1,d0
	moveq #1,d3
	cmp.l d0,d3
	jcc .L763
	addq.l #1,_board+32388
	jra .L763
.L757:
	move.b d0,(a1,d1.l)
	jra .L764
.L761:
	move.b #1,16(a1,d1.l)
	moveq #0,d0
	movem.l (sp)+,#1148
	rts
.L780:
	move.b #6,_board+7
	clr.b _board+5
	moveq #0,d0
	movem.l (sp)+,#1148
	rts
.L781:
	move.b #6,_board
	clr.b _board+3
	moveq #0,d0
	movem.l (sp)+,#1148
	rts
.L782:
	move.b #14,_board+119
	clr.b _board+117
	moveq #0,d0
	movem.l (sp)+,#1148
	rts
	.align	2
	.globl	_moveExists
_moveExists:
	lea (-3072,sp),sp
	movem.l #16190,-(sp)
	pea 44(sp)
	jsr _generateMoves
	move.l d0,d3
	addq.l #4,sp
	jle .L806
	lea (44,sp),a5
	moveq #0,d2
	lea _move_make,a4
	lea _kingLoc,a2
	lea _isAttacked,a3
	lea _board,a6
.L805:
	move.l a5,-(sp)
	jsr (a4)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d4
	sub.l d0,d4
	move.l d4,d0
	add.l d4,d0
	add.l d0,d0
	move.l (a2,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a3)
	lea (12,sp),sp
	tst.l d0
	jne .L786
	move.l (a5),d0
	cmp.l 3120(sp),d0
	jeq .L817
	lea _board,a1
	move.b 128(a1),d1
	move.b d1,d4
	eor.b #8,d4
	move.b d4,128(a1)
	move.b 4(a5),130(a1)
	move.b 5(a5),131(a1)
	move.b 6(a5),129(a1)
	move.w 142(a1),a0
	subq.w #1,a0
	move.w a0,142(a1)
	move.w a0,a0
	moveq #18,d5
	add.l a0,d5
	lsl.l #3,d5
	move.l (a6,d5.l),d6
	move.l 4(a6,d5.l),d7
	move.l d6,134(a1)
	move.l d7,138(a1)
	lea (2036,a0),a1
	add.l a1,a1
	add.l a1,a1
	move.l (a6,a1.l),_board+32364
	lea (3036,a0),a0
	add.l a0,a0
	add.l a0,a0
	move.l (a6,a0.l),_board+32368
	subq.w #1,_board+132
	moveq #0,d6
	not.b d6
	and.l d0,d6
	move.l d0,d4
	lsr.l #8,d4
	moveq #0,d5
	not.b d5
	and.l d4,d5
	move.l d5,a1
	move.l d0,d5
	clr.w d5
	swap d5
	moveq #15,d7
	and.l d5,d7
	moveq #7,d4
	and.l d4,d5
	subq.l #2,d5
	jeq .L818
.L788:
	clr.b (a6,a1.l)
	move.b d7,(a6,d6.l)
	move.l d0,d4
	clr.w d4
	swap d4
	lsr.w #8,d4
	moveq #15,d5
	and.l d5,d4
	jeq .L789
.L824:
	tst.b d1
	jeq .L819
	subq.l #1,_board+32388
	move.l d0,d5
	moveq #28,d1
	lsr.l d1,d5
	moveq #2,d1
	cmp.l d5,d1
	jeq .L793
	clr.w d0
	swap d0
	lsr.w #4,d0
	moveq #15,d1
	and.l d1,d0
	jeq .L800
	move.b d0,(a6,a1.l)
.L801:
	move.w #-9,a0
	add.l d0,a0
	moveq #1,d0
	cmp.l a0,d0
	jcc .L800
	addq.l #1,_board+32392
.L800:
	subq.l #1,d5
	jne .L792
	moveq #6,d0
	cmp.l a1,d0
	jeq .L820
	moveq #2,d0
	cmp.l a1,d0
	jeq .L821
	moveq #118,d0
	cmp.l a1,d0
	jeq .L822
	moveq #114,d0
	cmp.l a1,d0
	jeq .L823
.L792:
	addq.l #1,d2
	lea (12,a5),a5
	cmp.l d3,d2
	jne .L805
.L806:
	moveq #0,d0
	movem.l (sp)+,#31996
	lea (3072,sp),sp
	rts
.L818:
	move.l d7,d5
	lsr.l #1,d5
	moveq #4,d4
	and.l d4,d5
	move.l d6,(a2,d5.l)
	clr.b (a6,a1.l)
	move.b d7,(a6,d6.l)
	move.l d0,d4
	clr.w d4
	swap d4
	lsr.w #8,d4
	moveq #15,d5
	and.l d5,d4
	jne .L824
.L789:
	move.l d0,d5
	moveq #28,d4
	lsr.l d4,d5
	moveq #2,d4
	cmp.l d5,d4
	jeq .L796
	clr.w d0
	swap d0
	lsr.w #4,d0
	moveq #15,d4
	and.l d4,d0
	jeq .L800
	move.b d0,(a6,a1.l)
	tst.b d1
	jne .L801
.L807:
	subq.l #1,d0
	moveq #1,d1
	cmp.l d0,d1
	jcc .L800
	addq.l #1,_board+32388
	jra .L800
.L823:
	move.b #14,_board+112
	clr.b _board+115
	addq.l #1,d2
	lea (12,a5),a5
	cmp.l d3,d2
	jne .L805
	jra .L806
.L786:
	move.l (a5),d0
	lea _board,a1
	move.b 128(a1),d1
	move.b d1,d4
	eor.b #8,d4
	move.b d4,128(a1)
	move.b 4(a5),130(a1)
	move.b 5(a5),131(a1)
	move.b 6(a5),129(a1)
	move.w 142(a1),a0
	subq.w #1,a0
	move.w a0,142(a1)
	move.w a0,a0
	moveq #18,d5
	add.l a0,d5
	lsl.l #3,d5
	move.l (a6,d5.l),d6
	move.l 4(a6,d5.l),d7
	move.l d6,134(a1)
	move.l d7,138(a1)
	lea (2036,a0),a1
	add.l a1,a1
	add.l a1,a1
	move.l (a6,a1.l),_board+32364
	lea (3036,a0),a0
	add.l a0,a0
	add.l a0,a0
	move.l (a6,a0.l),_board+32368
	subq.w #1,_board+132
	moveq #0,d6
	not.b d6
	and.l d0,d6
	move.l d0,d4
	lsr.l #8,d4
	moveq #0,d5
	not.b d5
	and.l d4,d5
	move.l d5,a1
	move.l d0,d5
	clr.w d5
	swap d5
	moveq #15,d7
	and.l d5,d7
	moveq #7,d4
	and.l d4,d5
	subq.l #2,d5
	jne .L788
	jra .L818
.L796:
	tst.b d1
	jeq .L798
.L793:
	move.b #9,-16(a6,a1.l)
	addq.l #1,d2
	lea (12,a5),a5
	cmp.l d3,d2
	jne .L805
	jra .L806
.L798:
	move.b #1,16(a6,a1.l)
	addq.l #1,d2
	lea (12,a5),a5
	cmp.l d3,d2
	jne .L805
	jra .L806
.L819:
	subq.l #1,_board+32392
	move.l d0,d5
	moveq #28,d1
	lsr.l d1,d5
	moveq #2,d1
	cmp.l d5,d1
	jeq .L798
	clr.w d0
	swap d0
	lsr.w #4,d0
	moveq #15,d1
	and.l d1,d0
	jeq .L800
	move.b d0,(a6,a1.l)
	jra .L807
.L820:
	move.b #6,_board+7
	clr.b _board+5
	addq.l #1,d2
	lea (12,a5),a5
	cmp.l d3,d2
	jne .L805
	jra .L806
.L821:
	move.b #6,_board
	clr.b _board+3
	addq.l #1,d2
	lea (12,a5),a5
	cmp.l d3,d2
	jne .L805
	jra .L806
.L822:
	move.b #14,_board+119
	clr.b _board+117
	addq.l #1,d2
	lea (12,a5),a5
	cmp.l d3,d2
	jne .L805
	jra .L806
.L817:
	move.l a5,-(sp)
	jsr _move_unmake
	addq.l #4,sp
	moveq #1,d0
	movem.l (sp)+,#31996
	lea (3072,sp),sp
	rts
	.align	2
	.globl	_generateLegalMoves
_generateLegalMoves:
	movem.l #16188,-(sp)
	move.l 44(sp),d5
	move.l d5,-(sp)
	jsr _generateMoves
	move.l d0,d4
	addq.l #4,sp
	moveq #0,d7
	tst.l d0
	jle .L825
	moveq #0,d3
	moveq #0,d6
	lea _move_make,a5
	lea _kingLoc,a4
	lea _isAttacked,a3
	lea _move_unmake,a2
.L827:
	move.l d6,d2
	add.l d3,d2
	add.l d2,d2
	add.l d2,d2
	add.l d5,d2
	move.l d2,-(sp)
	jsr (a5)
	move.b _board+128,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d1
	sub.l d0,d1
	move.l d1,d0
	add.l d1,d0
	add.l d0,d0
	move.l (a4,d0.l),-(sp)
	moveq #0,d0
	move.b _board+128,d0
	move.l d0,-(sp)
	jsr (a3)
	lea (12,sp),sp
	tst.l d0
	jeq .L828
	move.l d2,-(sp)
	jsr (a2)
	move.l d4,a0
	add.l d4,a0
	add.l d4,a0
	add.l a0,a0
	add.l a0,a0
	add.l d5,a0
	move.l d2,a1
	move.l -12(a0),(a1)+
	move.l -8(a0),(a1)+
	move.l -4(a0),(a1)
	subq.l #1,d4
	addq.l #4,sp
	cmp.l d4,d3
	jlt .L827
.L825:
	move.l d7,d0
	movem.l (sp)+,#15612
	rts
.L828:
	addq.l #1,d7
	move.l d2,-(sp)
	jsr (a2)
	addq.l #1,d3
	addq.l #4,sp
	cmp.l d3,d4
	jle .L825
	move.l d3,d6
	add.l d3,d6
	jra .L827
.LC20:
	.ascii ") not legal, but in PV-line. It's the %d out of %d moves.\12\0"
.LC21:
	.ascii " - Legal\12\0"
.LC22:
	.ascii "%s\0"
.LC23:
	.ascii "+\0"
.LC24:
	.ascii "#\0"
.LC25:
	.ascii " \0"
.LC26:
	.ascii "Move (\0"
.LC27:
	.ascii " - Illegal\12\0"
	.align	2
	.globl	_printLine
_printLine:
	lea (-5488,sp),sp
	movem.l #16190,-(sp)
	move.l 5536(sp),a0
	tst.l (a0)
	jle .L835
	addq.l #4,a0
	move.l a0,56(sp)
	lea (60,sp),a0
	move.l a0,48(sp)
	clr.l 52(sp)
	move.l sp,d7
	add.l #2460,d7
	lea _move_make,a4
	lea _kingLoc,a3
	lea _isAttacked,a2
	lea _move_unmake,a5
.L872:
	move.l 56(sp),a0
	addq.l #4,56(sp)
	move.l (a0)+,d4
	move.l 48(sp),a0
	move.l d4,(a0)
	move.l d7,-(sp)
	jsr _generateMoves
	move.l d0,d3
	addq.l #4,sp
	jle .L837
	move.l d7,a6
	moveq #0,d2
.L841:
	move.l a6,-(sp)
	jsr (a4)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d5
	sub.l d0,d5
	move.l d5,d0
	add.l d5,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a2)
	lea (12,sp),sp
	tst.l d0
	jne .L838
	cmp.l (a6),d4
	jeq .L890
.L838:
	move.l a6,-(sp)
	jsr (a5)
	addq.l #1,d2
	lea (12,a6),a6
	addq.l #4,sp
	cmp.l d3,d2
	jne .L841
.L837:
	pea .LC26
	lea _printf,a2
	jsr (a2)
	move.l 56(sp),d3
	add.l d3,d3
	move.l d3,d4
	add.l 56(sp),d4
	add.l d4,d4
	add.l d4,d4
	lea (5536,sp),a0
	add.l d4,a0
	move.l -5472(a0),d2
	moveq #0,d1
	not.b d1
	and.l d2,d1
	move.l d2,d0
	lsr.l #8,d0
	moveq #0,d5
	not.b d5
	and.l d0,d5
	asr.l #4,d5
	lea .LC1,a0
	move.b (a0,d5.l),d5
	ext.w d5
	move.w d5,a0
	move.l a0,-(sp)
	moveq #7,d5
	and.l d5,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	asr.l #4,d1
	lea .LC1,a0
	move.b (a0,d1.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	moveq #7,d0
	and.l d2,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	pea .LC3
	jsr (a2)
	lea (24,sp),sp
	clr.w d2
	swap d2
	lsr.w #8,d2
	moveq #7,d0
	and.l d0,d2
	moveq #5,d0
	cmp.l d2,d0
	jeq .L844
	jge .L891
	subq.l #6,d2
	jeq .L845
	subq.l #1,d2
	jne .L843
	pea .LC10
	jsr (a2)
	addq.l #4,sp
.L843:
	move.l 52(sp),d6
	addq.l #1,d6
	move.l 5536(sp),a0
	move.l (a0),-(sp)
	move.l d6,-(sp)
	pea .LC20
	jsr (a2)
	lea (12,sp),sp
	move.l 5536(sp),a0
	cmp.l (a0),d6
	jge .L873
	lea 72(sp,d4.l),a0
	add.l 52(sp),d3
	add.l d3,d3
	add.l d3,d3
	move.l #5532,d0
	add.l sp,d0
	add.l d3,d0
	add.l #-5472,d0
	move.l d0,56(sp)
	lea _move_make,a5
	lea _kingLoc,a4
	lea _isAttacked,a3
	move.l a0,48(sp)
	move.l a2,d5
.L858:
	move.l 48(sp),a0
	move.l (a0),d2
	moveq #0,d1
	not.b d1
	and.l d2,d1
	move.l d2,d0
	lsr.l #8,d0
	moveq #0,d3
	not.b d3
	and.l d0,d3
	asr.l #4,d3
	lea .LC1,a0
	move.b (a0,d3.l),d3
	ext.w d3
	move.w d3,a0
	move.l a0,-(sp)
	moveq #7,d3
	and.l d3,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	asr.l #4,d1
	lea .LC1,a0
	move.b (a0,d1.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	moveq #7,d0
	and.l d2,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	pea .LC3
	move.l d5,a0
	jsr (a0)
	lea (20,sp),sp
	clr.w d2
	swap d2
	lsr.w #8,d2
	moveq #7,d0
	and.l d0,d2
	moveq #5,d0
	cmp.l d2,d0
	jeq .L849
	jge .L892
	subq.l #6,d2
	jeq .L852
	subq.l #1,d2
	jne .L848
	pea .LC10
	move.l d5,a0
	jsr (a0)
	addq.l #4,sp
.L848:
	move.l 56(sp),a0
	move.l (a0),d4
	move.l d7,-(sp)
	jsr _generateMoves
	move.l d0,d3
	addq.l #4,sp
	jle .L854
	move.l d7,a6
	moveq #0,d2
	lea _move_unmake,a2
	move.l d5,44(sp)
.L857:
	move.l a6,-(sp)
	jsr (a5)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d5
	sub.l d0,d5
	move.l d5,d0
	add.l d5,d0
	add.l d0,d0
	move.l (a4,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a3)
	lea (12,sp),sp
	tst.l d0
	jne .L855
	cmp.l (a6),d4
	jeq .L893
.L855:
	move.l a6,-(sp)
	jsr (a2)
	addq.l #1,d2
	lea (12,a6),a6
	addq.l #4,sp
	cmp.l d3,d2
	jne .L857
	move.l 44(sp),d5
.L854:
	pea .LC27
	move.l d5,a0
	jsr (a0)
	addq.l #4,sp
	addq.l #1,d6
	moveq #12,d0
	add.l d0,48(sp)
	move.l 5536(sp),a0
	cmp.l (a0),d6
	jlt .L858
.L873:
	move.l 52(sp),d2
	subq.l #1,d2
	jmi .L835
	move.l d2,a2
	add.l d2,a2
	add.l d2,a2
	add.l a2,a2
	add.l a2,a2
	moveq #60,d0
	add.l sp,d0
	add.l d0,a2
	lea _move_unmake,a3
.L875:
	move.l a2,-(sp)
	jsr (a3)
	lea (-12,a2),a2
	addq.l #4,sp
	dbra d2,.L875
	clr.w d2
	subq.l #1,d2
	jcc .L875
.L835:
	movem.l (sp)+,#31996
	lea (5488,sp),sp
	rts
.L890:
	move.l d0,d6
	move.l a6,-(sp)
	jsr (a5)
	move.l d7,-(sp)
	jsr _generateMoves
	move.l d0,d3
	addq.l #8,sp
	moveq #0,d5
	tst.l d0
	jle .L839
	moveq #0,d4
.L840:
	move.l d4,d2
	add.l d6,d2
	add.l d2,d2
	add.l d2,d2
	add.l d7,d2
	move.l d2,-(sp)
	jsr (a4)
	move.b _board+128,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d1
	sub.l d0,d1
	move.l d1,d0
	add.l d1,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	moveq #0,d0
	move.b _board+128,d0
	move.l d0,-(sp)
	jsr (a2)
	lea (12,sp),sp
	tst.l d0
	jeq .L859
	move.l d2,-(sp)
	jsr (a5)
	move.l d3,a0
	add.l d3,a0
	add.l d3,a0
	add.l a0,a0
	add.l a0,a0
	move.l #5536,d0
	add.l sp,d0
	add.l d0,a0
	lea (-3084,a0),a0
	move.l d2,a1
	move.l (a0)+,(a1)+
	move.l (a0)+,(a1)+
	move.l (a0),(a1)
	subq.l #1,d3
	addq.l #4,sp
	cmp.l d6,d3
	jgt .L840
.L839:
	move.l 48(sp),-(sp)
	jsr (a4)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	eor.b #1,d0
	and.l #255,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a2)
	lea (12,sp),sp
	tst.l d0
	jne .L894
	moveq #1,d0
	move.l 5540(sp),a0
	cmp.l 96(a0),d0
	jeq .L863
	move.l d7,-(sp)
	move.l d5,-(sp)
	move.l 60(sp),d0
	add.l d0,d0
	add.l 60(sp),d0
	add.l d0,d0
	add.l d0,d0
	lea (5540,sp),a0
	add.l d0,a0
	lea (-5472,a0),a0
	move.l 8(a0),-(sp)
	move.l 4(a0),-(sp)
	move.l (a0),-(sp)
	jsr _move_to_san
	move.l d0,-(sp)
	pea .LC22
	move.l #_printf,d2
	move.l d2,a0
	jsr (a0)
	lea (28,sp),sp
.L864:
	pea .LC25
	move.l d2,a0
	jsr (a0)
	addq.l #1,56(sp)
	moveq #12,d0
	add.l d0,52(sp)
	addq.l #4,sp
	move.l 52(sp),d1
	move.l 5536(sp),a0
	cmp.l (a0),d1
	jlt .L872
	jra .L873
.L859:
	addq.l #1,d5
	move.l d2,-(sp)
	jsr (a5)
	addq.l #1,d6
	addq.l #4,sp
	cmp.l d3,d6
	jge .L839
	move.l d6,d4
	add.l d6,d4
	jra .L840
.L863:
	move.l 48(sp),a0
	move.l (a0),d3
	moveq #0,d1
	not.b d1
	and.l d3,d1
	move.l d3,d0
	lsr.l #8,d0
	moveq #0,d2
	not.b d2
	and.l d0,d2
	asr.l #4,d2
	lea .LC1,a0
	move.b (a0,d2.l),d2
	ext.w d2
	move.w d2,a0
	move.l a0,-(sp)
	moveq #7,d2
	and.l d2,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	asr.l #4,d1
	lea .LC1,a0
	move.b (a0,d1.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	moveq #7,d0
	and.l d3,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	pea .LC3
	move.l #_printf,d2
	move.l d2,a0
	jsr (a0)
	lea (20,sp),sp
	clr.w d3
	swap d3
	lsr.w #8,d3
	moveq #7,d0
	and.l d0,d3
	moveq #5,d0
	cmp.l d3,d0
	jeq .L866
	jge .L895
	subq.l #6,d3
	jeq .L869
	subq.l #1,d3
	jne .L865
	pea .LC10
	move.l d2,a0
	jsr (a0)
	addq.l #4,sp
.L865:
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	eor.b #1,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	eor.b #8,d1
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jeq .L864
.L896:
	jsr _numOfLegalMoves
	tst.l d0
	jeq .L871
	pea .LC23
	move.l d2,a0
	jsr (a0)
	addq.l #4,sp
	pea .LC25
	move.l d2,a0
	jsr (a0)
	addq.l #1,56(sp)
	moveq #12,d0
	add.l d0,52(sp)
	addq.l #4,sp
	move.l 52(sp),d1
	move.l 5536(sp),a0
	cmp.l (a0),d1
	jlt .L872
	jra .L873
.L891:
	subq.l #3,d2
	jne .L843
	pea .LC7
	jsr (a2)
	addq.l #4,sp
	jra .L843
.L895:
	subq.l #3,d3
	jne .L865
	pea .LC7
	move.l d2,a0
	jsr (a0)
	addq.l #4,sp
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	eor.b #1,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	eor.b #8,d1
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jeq .L864
	jra .L896
.L866:
	pea .LC8
	move.l d2,a0
	jsr (a0)
	addq.l #4,sp
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	eor.b #1,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	eor.b #8,d1
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jeq .L864
	jra .L896
.L869:
	pea .LC9
	move.l d2,a0
	jsr (a0)
	addq.l #4,sp
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	eor.b #1,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	eor.b #8,d1
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a2)
	addq.l #8,sp
	tst.l d0
	jeq .L864
	jra .L896
.L893:
	move.l 44(sp),d5
	move.l a6,-(sp)
	jsr (a2)
	pea .LC21
	move.l d5,a0
	jsr (a0)
	addq.l #8,sp
	addq.l #1,d6
	moveq #12,d0
	add.l d0,48(sp)
	move.l 5536(sp),a0
	cmp.l (a0),d6
	jlt .L858
	jra .L873
.L892:
	subq.l #3,d2
	jne .L848
	pea .LC7
	move.l d5,a0
	jsr (a0)
	addq.l #4,sp
	jra .L848
.L852:
	pea .LC9
	move.l d5,a0
	jsr (a0)
	addq.l #4,sp
	jra .L848
.L849:
	pea .LC8
	move.l d5,a0
	jsr (a0)
	addq.l #4,sp
	jra .L848
.L894:
	addq.l #1,52(sp)
	jra .L873
.L844:
	pea .LC8
	jsr (a2)
	addq.l #4,sp
	jra .L843
.L845:
	pea .LC9
	jsr (a2)
	addq.l #4,sp
	jra .L843
.L871:
	move.l d2,a2
	pea .LC24
	jsr (a2)
	addq.l #1,56(sp)
	addq.l #4,sp
	jra .L873
	.align	2
_Perft.part.0:
	lea (-15444,sp),sp
	movem.l #16190,-(sp)
	move.l 15492(sp),d2
	move.b d2,114(sp)
	pea 128(sp)
	jsr _generateMoves
	move.l d0,106(sp)
	addq.l #4,sp
	jle .L921
	subq.b #5,d2
	move.b d2,115(sp)
	lea (128,sp),a0
	move.l a0,50(sp)
	clr.l 106(sp)
	clr.l 110(sp)
	clr.l 58(sp)
	move.l #_move_make,d6
	lea _kingLoc,a3
	lea _isAttacked,a4
	lea _move_unmake,a6
	and.l #255,d2
	move.l d2,116(sp)
.L920:
	move.l 50(sp),-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d2
	sub.l d0,d2
	move.l d2,d0
	add.l d2,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	move.l d0,d2
	lea (12,sp),sp
	jeq .L941
	move.l 50(sp),-(sp)
	jsr (a6)
	addq.l #1,62(sp)
	moveq #12,d0
	add.l d0,54(sp)
	addq.l #4,sp
	move.l 102(sp),d0
	cmp.l 58(sp),d0
	jne .L920
.L897:
	move.l 106(sp),d0
	move.l 110(sp),d1
	movem.l (sp)+,#31996
	lea (15444,sp),sp
	rts
.L941:
	cmp.b #1,114(sp)
	jne .L942
	clr.l 94(sp)
	move.l #1,98(sp)
.L900:
	move.l 94(sp),d2
	move.l 98(sp),d3
	add.l d3,110(sp)
	move.l 106(sp),d0
	addx.l d2,d0
	move.l d0,106(sp)
.L957:
	move.l 50(sp),-(sp)
	jsr (a6)
	addq.l #1,62(sp)
	moveq #12,d0
	add.l d0,54(sp)
	addq.l #4,sp
	move.l 102(sp),d0
	cmp.l 58(sp),d0
	jne .L920
	jra .L897
.L942:
	pea 3200(sp)
	jsr _generateMoves
	move.l d0,94(sp)
	addq.l #4,sp
	jle .L923
	move.l sp,d4
	add.l #3200,d4
	clr.l 94(sp)
	clr.l 98(sp)
	move.l d2,54(sp)
	move.l d4,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d2
	sub.l d0,d2
	move.l d2,d0
	add.l d2,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	move.l d0,d2
	lea (12,sp),sp
	jeq .L943
.L902:
	move.l d4,-(sp)
	jsr (a6)
	addq.l #1,58(sp)
	moveq #12,d1
	add.l d1,d4
	addq.l #4,sp
	move.l 90(sp),d1
	cmp.l 54(sp),d1
	jeq .L900
.L939:
	move.l d4,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d2
	sub.l d0,d2
	move.l d2,d0
	add.l d2,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	move.l d0,d2
	lea (12,sp),sp
	jne .L902
.L943:
	cmp.b #2,114(sp)
	jne .L944
	clr.l 82(sp)
	move.l #1,86(sp)
.L903:
	move.l 82(sp),d2
	move.l 86(sp),d3
	add.l d3,98(sp)
	move.l 94(sp),d0
	addx.l d2,d0
	move.l d0,94(sp)
.L946:
	move.l d4,-(sp)
	jsr (a6)
	addq.l #1,58(sp)
	moveq #12,d1
	add.l d1,d4
	addq.l #4,sp
	move.l 90(sp),d1
	cmp.l 54(sp),d1
	jne .L939
	jra .L900
.L944:
	move.l sp,d3
	add.l #6272,d3
	move.l d3,-(sp)
	jsr _generateMoves
	move.l d0,82(sp)
	addq.l #4,sp
	clr.l 82(sp)
	clr.l 86(sp)
	tst.l d0
	jle .L903
	move.l d4,124(sp)
	move.l d2,d4
	move.l d3,d7
.L918:
	move.l d7,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d2
	sub.l d0,d2
	move.l d2,d0
	add.l d2,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	move.l d0,d3
	lea (12,sp),sp
	jeq .L945
	move.l d7,-(sp)
	jsr (a6)
	addq.l #1,d4
	moveq #12,d1
	add.l d1,d7
	addq.l #4,sp
	cmp.l 78(sp),d4
	jne .L918
.L948:
	move.l 124(sp),d4
	move.l 82(sp),d2
	move.l 86(sp),d3
	add.l d3,98(sp)
	move.l 94(sp),d0
	addx.l d2,d0
	move.l d0,94(sp)
	jra .L946
.L945:
	cmp.b #3,114(sp)
	jne .L947
	clr.l 70(sp)
	move.l #1,74(sp)
.L906:
	move.l 70(sp),d2
	move.l 74(sp),d3
	add.l d3,86(sp)
	move.l 82(sp),d0
	addx.l d2,d0
	move.l d0,82(sp)
.L950:
	move.l d7,-(sp)
	jsr (a6)
	addq.l #1,d4
	moveq #12,d1
	add.l d1,d7
	addq.l #4,sp
	cmp.l 78(sp),d4
	jne .L918
	jra .L948
.L947:
	lea (9344,sp),a2
	move.l a2,-(sp)
	jsr _generateMoves
	move.l d0,d5
	addq.l #4,sp
	clr.l 70(sp)
	clr.l 74(sp)
	tst.l d0
	jle .L906
	move.l d7,120(sp)
	move.l d4,d7
.L917:
	move.l a2,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d2
	sub.l d0,d2
	move.l d2,d0
	add.l d2,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	move.l d0,d2
	lea (12,sp),sp
	jeq .L949
	move.l a2,-(sp)
	jsr (a6)
	addq.l #1,d3
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l d5,d3
	jne .L917
.L952:
	move.l d7,d4
	move.l 120(sp),d7
	move.l 70(sp),d2
	move.l 74(sp),d3
	add.l d3,86(sp)
	move.l 82(sp),d0
	addx.l d2,d0
	move.l d0,82(sp)
	jra .L950
.L949:
	cmp.b #4,114(sp)
	jne .L951
	clr.l 62(sp)
	move.l #1,66(sp)
	move.l 62(sp),d0
	move.l 66(sp),d1
	add.l d1,74(sp)
	move.l 70(sp),d2
	addx.l d0,d2
	move.l d2,70(sp)
.L955:
	move.l a2,-(sp)
	jsr (a6)
	addq.l #1,d3
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l d5,d3
	jne .L917
	jra .L952
.L951:
	pea 12416(sp)
	jsr _generateMoves
	move.l d0,d4
	addq.l #4,sp
	jle .L929
	lea (12416,sp),a5
	tst.b 115(sp)
	jne .L953
	clr.l 62(sp)
	clr.l 66(sp)
	move.l d3,46(sp)
.L916:
	move.l a5,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	lea (12,sp),sp
	tst.l d0
	jeq .L954
	move.l a5,-(sp)
	jsr (a6)
	addq.l #1,d2
	lea (12,a5),a5
	addq.l #4,sp
	cmp.l d4,d2
	jne .L916
.L936:
	move.l 46(sp),d3
	move.l 62(sp),d0
	move.l 66(sp),d1
	add.l d1,74(sp)
	move.l 70(sp),d2
	addx.l d0,d2
	move.l d2,70(sp)
	jra .L955
.L954:
	clr.l d0
	moveq #1,d1
	add.l d1,66(sp)
	move.l 62(sp),d3
	addx.l d0,d3
	move.l d3,62(sp)
	move.l a5,-(sp)
	jsr (a6)
	addq.l #1,d2
	lea (12,a5),a5
	addq.l #4,sp
	cmp.l d4,d2
	jne .L916
	jra .L936
.L953:
	clr.l 62(sp)
	clr.l 66(sp)
	move.l d3,46(sp)
	move.l a5,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	lea (12,sp),sp
	tst.l d0
	jeq .L956
.L912:
	move.l a5,-(sp)
	jsr (a6)
	addq.l #1,d2
	lea (12,a5),a5
	addq.l #4,sp
	cmp.l d4,d2
	jeq .L936
.L940:
	move.l a5,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d3
	sub.l d0,d3
	move.l d3,d0
	add.l d3,d0
	add.l d0,d0
	move.l (a3,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a4)
	lea (12,sp),sp
	tst.l d0
	jne .L912
.L956:
	move.l 116(sp),-(sp)
	jsr (_Perft.part.0)
	add.l d1,70(sp)
	move.l 66(sp),d3
	addx.l d0,d3
	move.l d3,66(sp)
	addq.l #4,sp
	move.l a5,-(sp)
	jsr (a6)
	addq.l #1,d2
	lea (12,a5),a5
	addq.l #4,sp
	cmp.l d4,d2
	jne .L940
	jra .L936
.L929:
	clr.l 62(sp)
	clr.l 66(sp)
	move.l 62(sp),d0
	move.l 66(sp),d1
	add.l d1,74(sp)
	move.l 70(sp),d2
	addx.l d0,d2
	move.l d2,70(sp)
	jra .L955
.L923:
	clr.l 94(sp)
	clr.l 98(sp)
	move.l 94(sp),d2
	move.l 98(sp),d3
	add.l d3,110(sp)
	move.l 106(sp),d0
	addx.l d2,d0
	move.l d0,106(sp)
	jra .L957
.L921:
	clr.l 106(sp)
	clr.l 110(sp)
	move.l 106(sp),d0
	move.l 110(sp),d1
	movem.l (sp)+,#31996
	lea (15444,sp),sp
	rts
	.align	2
	.globl	_Perft
_Perft:
	move.l 4(sp),d0
	tst.b d0
	jne .L962
	clr.l d0
	moveq #1,d1
	rts
.L962:
	moveq #0,d1
	not.b d1
	and.l d0,d1
	move.l d1,4(sp)
	jra (_Perft.part.0)
.LC28:
	.ascii "  %lld\12\0"
.LC29:
	.ascii "Total: %lld\12\0"
	.align	2
	.globl	_Divide
_Divide:
	lea (-6172,sp),sp
	movem.l #16190,-(sp)
	move.l 6220(sp),d2
	move.b d2,62(sp)
	jne .L993
	clr.l 50(sp)
	move.l #1,54(sp)
	move.l 50(sp),d0
	move.l 54(sp),d1
	movem.l (sp)+,#31996
	lea (6172,sp),sp
	rts
.L993:
	pea 72(sp)
	jsr _generateMoves
	move.l d0,d7
	addq.l #4,sp
	jle .L983
	subq.b #2,d2
	move.b d2,63(sp)
	lea (72,sp),a2
	clr.l 50(sp)
	clr.l 54(sp)
	moveq #0,d3
	move.l #_move_make,d6
	lea _kingLoc,a6
	lea _isAttacked,a5
	move.l #_printf,58(sp)
	lea _move_unmake,a4
	and.l #255,d2
	move.l d2,64(sp)
.L981:
	move.l a2,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d2
	sub.l d0,d2
	move.l d2,d0
	add.l d2,d0
	add.l d0,d0
	move.l (a6,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a5)
	move.l d0,d2
	lea (12,sp),sp
	jeq .L994
	move.l a2,-(sp)
	jsr (a4)
	addq.l #1,d3
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l d7,d3
	jne .L981
.L965:
	move.l 54(sp),-(sp)
	move.l 54(sp),-(sp)
	pea .LC29
	move.l 70(sp),a0
	jsr (a0)
	lea (12,sp),sp
.L1001:
	move.l 50(sp),d0
	move.l 54(sp),d1
	movem.l (sp)+,#31996
	lea (6172,sp),sp
	rts
.L994:
	move.l (a2),d4
	moveq #0,d1
	not.b d1
	and.l d4,d1
	move.l d4,d0
	lsr.l #8,d0
	moveq #0,d5
	not.b d5
	and.l d0,d5
	asr.l #4,d5
	lea .LC1,a0
	move.b (a0,d5.l),d5
	ext.w d5
	move.w d5,a0
	move.l a0,-(sp)
	moveq #7,d5
	and.l d5,d0
	lea .LC2,a0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a1
	move.l a1,-(sp)
	asr.l #4,d1
	lea .LC1,a1
	move.b (a1,d1.l),d0
	ext.w d0
	move.w d0,a1
	move.l a1,-(sp)
	moveq #7,d0
	and.l d4,d0
	move.b (a0,d0.l),d0
	ext.w d0
	move.w d0,a0
	move.l a0,-(sp)
	pea .LC3
	move.l 78(sp),a1
	jsr (a1)
	lea (20,sp),sp
	clr.w d4
	swap d4
	lsr.w #8,d4
	moveq #7,d0
	and.l d0,d4
	moveq #5,d0
	cmp.l d4,d0
	jeq .L968
	jge .L995
	subq.l #6,d4
	jeq .L971
	subq.l #1,d4
	jne .L967
	pea .LC10
	move.l 62(sp),a1
	jsr (a1)
	addq.l #4,sp
.L967:
	cmp.b #1,62(sp)
	jne .L996
.L984:
	clr.l d4
	moveq #1,d5
	move.l d5,-(sp)
	move.l d4,-(sp)
	pea .LC28
	move.l 70(sp),a0
	jsr (a0)
	add.l d5,66(sp)
	move.l 62(sp),d0
	addx.l d4,d0
	move.l d0,62(sp)
	lea (12,sp),sp
.L999:
	move.l a2,-(sp)
	jsr (a4)
	addq.l #1,d3
	lea (12,a2),a2
	addq.l #4,sp
	cmp.l d7,d3
	jne .L981
	jra .L965
.L995:
	subq.l #3,d4
	jne .L967
	pea .LC7
	move.l 62(sp),a0
	jsr (a0)
	addq.l #4,sp
	cmp.b #1,62(sp)
	jeq .L984
.L996:
	pea 3144(sp)
	jsr _generateMoves
	addq.l #4,sp
	tst.l d0
	jle .L985
	lea (3144,sp),a3
	clr.l d4
	clr.l d5
	tst.b 63(sp)
	jne .L997
	move.l d7,46(sp)
	move.l a2,68(sp)
	move.l d3,a2
	move.l d0,d3
.L980:
	move.l a3,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d7
	sub.l d0,d7
	move.l d7,d0
	add.l d7,d0
	add.l d0,d0
	move.l (a6,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a5)
	lea (12,sp),sp
	tst.l d0
	jeq .L998
	move.l a3,-(sp)
	jsr (a4)
	addq.l #1,d2
	lea (12,a3),a3
	addq.l #4,sp
	cmp.l d3,d2
	jne .L980
.L989:
	move.l 46(sp),d7
	move.l a2,d3
	move.l 68(sp),a2
	move.l d5,-(sp)
	move.l d4,-(sp)
	pea .LC28
	move.l 70(sp),a0
	jsr (a0)
	add.l d5,66(sp)
	move.l 62(sp),d0
	addx.l d4,d0
	move.l d0,62(sp)
	lea (12,sp),sp
	jra .L999
.L968:
	pea .LC8
	move.l 62(sp),a1
	jsr (a1)
	addq.l #4,sp
	jra .L967
.L971:
	pea .LC9
	move.l 62(sp),a0
	jsr (a0)
	addq.l #4,sp
	jra .L967
.L998:
	clr.l d0
	addq.l #1,d5
	addx.l d0,d4
	move.l a3,-(sp)
	jsr (a4)
	addq.l #1,d2
	lea (12,a3),a3
	addq.l #4,sp
	cmp.l d3,d2
	jne .L980
	jra .L989
.L997:
	move.l d7,46(sp)
	move.l a2,68(sp)
	move.l d3,a2
	move.l d0,d3
	move.l a3,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d7
	sub.l d0,d7
	move.l d7,d0
	add.l d7,d0
	add.l d0,d0
	move.l (a6,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a5)
	lea (12,sp),sp
	tst.l d0
	jeq .L1000
.L976:
	move.l a3,-(sp)
	jsr (a4)
	addq.l #1,d2
	lea (12,a3),a3
	addq.l #4,sp
	cmp.l d3,d2
	jeq .L989
.L992:
	move.l a3,-(sp)
	move.l d6,a0
	jsr (a0)
	move.b _board+128,d1
	move.b d1,d0
	lsr.b #3,d0
	and.l #255,d0
	moveq #1,d7
	sub.l d0,d7
	move.l d7,d0
	add.l d7,d0
	add.l d0,d0
	move.l (a6,d0.l),-(sp)
	and.l #255,d1
	move.l d1,-(sp)
	jsr (a5)
	lea (12,sp),sp
	tst.l d0
	jne .L976
.L1000:
	move.l 64(sp),-(sp)
	jsr (_Perft.part.0)
	add.l d1,d5
	addx.l d0,d4
	addq.l #4,sp
	move.l a3,-(sp)
	jsr (a4)
	addq.l #1,d2
	lea (12,a3),a3
	addq.l #4,sp
	cmp.l d3,d2
	jne .L992
	jra .L989
.L983:
	clr.l 50(sp)
	clr.l 54(sp)
	move.l #_printf,58(sp)
	move.l 54(sp),-(sp)
	move.l 54(sp),-(sp)
	pea .LC29
	move.l 70(sp),a0
	jsr (a0)
	lea (12,sp),sp
	jra .L1001
.L985:
	clr.l d4
	clr.l d5
	move.l d5,-(sp)
	move.l d4,-(sp)
	pea .LC28
	move.l 70(sp),a0
	jsr (a0)
	add.l d5,66(sp)
	move.l 62(sp),d0
	addx.l d4,d0
	move.l d0,62(sp)
	lea (12,sp),sp
	jra .L999
	.align	2
	.globl	_generatePawnCaptureMoves
_generatePawnCaptureMoves:
	movem.l #16176,-(sp)
	move.l 36(sp),d3
	move.l 40(sp),a2
	moveq #8,d0
	cmp.l d3,d0
	jeq .L1036
	moveq #16,d2
	add.l a2,d2
	move.l d2,d4
	asr.l #4,d4
	lea _board,a3
	tst.b (a3,d2.l)
	jne .L1006
	tst.l d3
	jne .L1006
	moveq #7,d0
	cmp.l d4,d0
	jeq .L1005
.L1006:
	move.l d2,d0
	subq.l #1,d0
	move.b (a3,d0.l),d1
	jeq .L1007
	moveq #8,d5
	and.l d1,d5
	cmp.l d3,d5
	jeq .L1007
	and.l #255,d1
	moveq #8,d5
	cmp.l d3,d5
	jeq .L1037
	tst.l d3
	jne .L1010
	moveq #7,d5
	cmp.l d4,d5
	jeq .L1009
.L1010:
	moveq #1,d7
	or.l d3,d7
	move.l d7,a1
	move.l _moveIndex,d5
	move.l d5,a0
	add.l d5,a0
	add.l d5,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	swap d7
	clr.w d7
	move.l a2,d6
	or.l d6,d7
	lsl.l #8,d0
	or.l d7,d0
	move.l d1,d6
	lsl.w #4,d6
	swap d6
	clr.w d6
	or.l d6,d0
	move.l d0,(a0)
	lsl.l #4,d1
	add.l a1,d1
	add.l d1,d1
	add.l d1,d1
	lea _MvvLvaScores,a1
	move.l (a1,d1.l),d1
	add.l #1000000,d1
	move.l d1,8(a0)
	addq.l #1,d5
	move.l d5,_moveIndex
.L1007:
	addq.l #1,d2
	move.b (a3,d2.l),d1
	jeq .L1002
	moveq #0,d0
	move.b d1,d0
	moveq #8,d7
	and.l d7,d1
	cmp.l d3,d1
	jeq .L1002
	cmp.l d3,d7
	jeq .L1038
	tst.l d3
	jne .L1014
	subq.l #7,d4
	jeq .L1013
.L1014:
	moveq #1,d1
	or.l d1,d3
	move.l _moveIndex,d1
	move.l d1,a0
	add.l d1,a0
	add.l d1,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	move.l d3,d4
	swap d4
	clr.w d4
	move.l a2,d5
	or.l d5,d4
	lsl.l #8,d2
	or.l d4,d2
	move.l d0,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d4,d2
	move.l d2,(a0)
	lsl.l #4,d0
	add.l d3,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a1
	move.l (a1,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a0)
	addq.l #1,d1
	move.l d1,_moveIndex
.L1002:
	movem.l (sp)+,#3324
	rts
.L1036:
	moveq #-16,d2
	add.l a2,d2
	move.l d2,d4
	asr.l #4,d4
	lea _board,a3
	tst.b (a3,d2.l)
	jne .L1006
	tst.l d4
	jne .L1006
.L1005:
	clr.l -(sp)
	move.l d3,-(sp)
	move.l d2,-(sp)
	move.l a2,-(sp)
	jsr _pushPromotion
	lea (16,sp),sp
	jra .L1006
.L1038:
	tst.l d4
	jne .L1014
.L1013:
	move.l d0,-(sp)
	move.l d3,-(sp)
	move.l d2,-(sp)
	move.l a2,-(sp)
	jsr _pushPromotion
	lea (16,sp),sp
	movem.l (sp)+,#3324
	rts
.L1037:
	tst.l d4
	jne .L1010
.L1009:
	move.l d1,-(sp)
	move.l d3,-(sp)
	move.l d0,-(sp)
	move.l a2,-(sp)
	jsr _pushPromotion
	lea (16,sp),sp
	jra .L1007
	.align	2
	.globl	_generateCaptureMoves
_generateCaptureMoves:
	lea (-12,sp),sp
	movem.l #16190,-(sp)
	move.l 60(sp),_moveList
	clr.l _moveIndex
	move.b _board+128,d4
	lea _board,a3
	move.l a3,a2
	sub.l a5,a5
	moveq #0,d2
.L1099:
	moveq #119,d0
	not.b d0
	and.l d2,d0
	jne .L1205
	move.b (a2),d6
	jeq .L1205
	move.b d6,d5
	and.b #8,d5
	cmp.b d5,d4
	jeq .L1215
.L1205:
	move.l d2,d0
	addq.l #1,d0
	move.l a5,d1
	add.l #256,d1
.L1040:
	move.l d0,d2
	addq.l #1,a2
	move.l d1,a5
	cmp.l #128,d0
	jne .L1099
.L1223:
	move.b _board+130,d0
	tst.b d4
	jne .L1100
	cmp.b #127,d0
	jeq .L1103
	move.b d0,d1
	lsr.b #4,d1
	cmp.b #5,d1
	jeq .L1216
.L1103:
	move.l _moveIndex,d0
.L1039:
	movem.l (sp)+,#31996
	lea (12,sp),sp
	rts
.L1215:
	moveq #0,d3
	move.b d4,d3
	moveq #7,d0
	and.l d0,d6
	move.l d6,d0
	add.l d0,d0
	move.w .L1043(pc,d0.l),d0
	jmp %pc@(2,d0:w)
	.balignw 2,0x284c
.L1043:
	.word .L1041-.L1043
	.word .L1042-.L1043
	.word .L1044-.L1043
	.word .L1045-.L1043
	.word .L1041-.L1043
	.word .L1046-.L1043
	.word .L1047-.L1043
	.word .L1048-.L1043
.L1048:
	or.b #7,d4
	moveq #0,d1
	move.b d4,d1
	move.l _moveList,a4
	move.l _moveIndex,d6
	move.l d1,d0
	swap d0
	clr.w d0
	or.l d2,d0
	move.l d0,48(sp)
	lea _rmoves.3168+4,a1
	move.l #_rmoves.3168+32,d7
	sub.l a6,a6
	move.w #-17,a0
	move.b d5,52(sp)
	move.w a6,d4
	move.l d1,a6
	move.l d2,d0
.L1095:
	add.l a0,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L1092
	move.b (a3,d0.l),d1
	jeq .L1095
	moveq #8,d5
	and.l d1,d5
	cmp.l d3,d5
	jeq .L1092
	and.l #255,d1
	move.l d6,a0
	add.l d6,a0
	add.l d6,a0
	add.l a0,a0
	add.l a0,a0
	move.l a4,d5
	add.l a0,d5
	lsl.l #8,d0
	or.l 48(sp),d0
	move.l d1,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d4,d0
	move.l d5,a0
	move.l d0,(a0)
	lsl.l #4,d1
	move.l d1,d0
	add.l a6,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a0
	move.l (a0,d0.l),d0
	add.l #1000000,d0
	move.l d5,a0
	move.l d0,8(a0)
	addq.l #1,d6
	moveq #1,d4
.L1092:
	cmp.l d7,a1
	jeq .L1217
	move.l (a1)+,a0
	move.l d2,d0
	jra .L1095
.L1047:
	or.b #6,d4
	and.l #255,d4
	move.l d4,48(sp)
	move.l _moveList,a4
	move.l _moveIndex,d6
	move.l d4,d0
	swap d0
	clr.w d0
	or.l d2,d0
	move.l d0,52(sp)
	lea _rmoves.3155+4,a1
	move.l #_rmoves.3155+16,d7
	sub.l a6,a6
	move.w #-16,a0
	move.l d2,d0
.L1088:
	add.l a0,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L1085
	move.b (a3,d0.l),d1
	jeq .L1088
	moveq #8,d4
	and.l d1,d4
	cmp.l d3,d4
	jeq .L1085
	and.l #255,d1
	move.l d6,a0
	add.l d6,a0
	add.l d6,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	lsl.l #8,d0
	or.l 52(sp),d0
	move.l d1,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d4,d0
	move.l d0,(a0)
	lsl.l #4,d1
	move.l 48(sp),d0
	add.l d1,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a6
	move.l (a6,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a0)
	addq.l #1,d6
	move.w #1,a6
.L1085:
	cmp.l d7,a1
	jeq .L1207
	move.l (a1)+,a0
	move.l d2,d0
	jra .L1088
.L1046:
	or.b #5,d4
	and.l #255,d4
	move.l d4,48(sp)
	move.l _moveList,a4
	move.l _moveIndex,d6
	move.l d4,d0
	swap d0
	clr.w d0
	or.l d2,d0
	move.l d0,52(sp)
	lea _rmoves.3142+4,a1
	move.l #_rmoves.3142+16,d7
	sub.l a6,a6
	move.w #-17,a0
	move.l d2,d0
.L1081:
	add.l a0,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L1078
	move.b (a3,d0.l),d1
	jeq .L1081
	moveq #8,d4
	and.l d1,d4
	cmp.l d3,d4
	jeq .L1078
	and.l #255,d1
	move.l d6,a0
	add.l d6,a0
	add.l d6,a0
	add.l a0,a0
	add.l a0,a0
	lea (a4,a0.l),a0
	lsl.l #8,d0
	or.l 52(sp),d0
	move.l d1,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d4,d0
	move.l d0,(a0)
	lsl.l #4,d1
	move.l 48(sp),d0
	add.l d1,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a6
	move.l (a6,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a0)
	addq.l #1,d6
	move.w #1,a6
.L1078:
	cmp.l a1,d7
	jeq .L1207
	move.l (a1)+,a0
	move.l d2,d0
	jra .L1081
.L1045:
	or.b #3,d4
	moveq #0,d0
	move.b d4,d0
	move.l _moveList,a1
	move.l _moveIndex,d1
	move.l d0,d4
	swap d4
	clr.w d4
	or.l d2,d4
	move.l d4,a6
	move.w #-33,a0
	add.l d2,a0
	move.l a0,d4
	moveq #119,d6
	not.b d6
	and.l d6,d4
	jne .L1110
	move.b -33(a2),d6
	jeq .L1110
	moveq #8,d4
	and.l d6,d4
	cmp.l d3,d4
	jeq .L1110
	and.l #255,d6
	move.l d1,a4
	add.l d1,a4
	add.l d1,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d6,d7
	lsl.w #4,d7
	swap d7
	clr.w d7
	move.l a5,d4
	add.l #-8448,d4
	or.l d7,d4
	move.l a6,d7
	or.l d4,d7
	move.l d7,(a4)
	lsl.l #4,d6
	move.l d6,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_MvvLvaScores,d6
	move.l (a0,d6.l),d4
	add.l #1000000,d4
	move.l d4,8(a4)
	addq.l #1,d1
	moveq #1,d6
.L1052:
	move.w #-31,a0
	add.l d2,a0
	move.l a0,d7
	moveq #119,d4
	not.b d4
	and.l d4,d7
	jne .L1053
	move.b -31(a2),d7
	jne .L1218
.L1053:
	move.w #-18,a0
	add.l d2,a0
	move.l a0,d4
	moveq #119,d7
	not.b d7
	and.l d7,d4
	jne .L1054
	move.b -18(a2),d7
	jne .L1219
.L1054:
	move.w #-14,a0
	add.l d2,a0
	move.l a0,d4
	moveq #119,d7
	not.b d7
	and.l d7,d4
	jne .L1055
	move.b -14(a2),d7
	jne .L1220
.L1055:
	move.w #14,a0
	add.l d2,a0
	move.l a0,d4
	moveq #119,d7
	not.b d7
	and.l d7,d4
	jne .L1056
	move.b 14(a2),d7
	jne .L1221
.L1056:
	move.w #18,a0
	add.l d2,a0
	move.l a0,d4
	moveq #119,d7
	not.b d7
	and.l d7,d4
	jne .L1057
	move.b 18(a2),d7
	jne .L1222
.L1057:
	move.w #31,a0
	add.l d2,a0
	move.l a0,d4
	moveq #119,d7
	not.b d7
	and.l d7,d4
	jne .L1058
	move.b 31(a2),d7
	jeq .L1058
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jeq .L1058
	and.l #255,d7
	move.l d1,a4
	add.l d1,a4
	add.l d1,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d7,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	move.l a5,d6
	add.l #7936,d6
	or.l d4,d6
	move.l a6,d4
	or.l d6,d4
	move.l d4,(a4)
	lsl.l #4,d7
	move.l d7,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_MvvLvaScores,d4
	move.l (a0,d4.l),d6
	add.l #1000000,d6
	move.l d6,8(a4)
	addq.l #1,d1
	move.w #33,a0
	add.l d2,a0
	move.l a0,d4
	moveq #119,d6
	not.b d6
	and.l d6,d4
	jne .L1060
	move.b 33(a2),d7
	jne .L1115
.L1060:
	move.l d1,_moveIndex
.L1098:
	move.b d5,d4
	move.l d2,d0
	addq.l #1,d0
	move.l a5,d1
	add.l #256,d1
.L1231:
	move.l d0,d2
	addq.l #1,a2
	move.l d1,a5
	cmp.l #128,d0
	jne .L1099
	jra .L1223
.L1044:
	or.b #2,d4
	and.l #255,d4
	move.l _moveList,a1
	move.l _moveIndex,a0
	move.l d4,d0
	swap d0
	clr.w d0
	or.l d2,d0
	move.l d0,44(sp)
	moveq #-17,d0
	add.l d2,d0
	moveq #119,d1
	not.b d1
	and.l d1,d0
	jne .L1113
	move.b -17(a2),d0
	jeq .L1113
	moveq #8,d1
	and.l d0,d1
	cmp.l d3,d1
	jeq .L1113
	and.l #255,d0
	lea (a0,a0.l),a4
	add.l a0,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d0,d1
	lsl.w #4,d1
	swap d1
	clr.w d1
	move.l a5,d6
	add.l #-4352,d6
	or.l d6,d1
	or.l 44(sp),d1
	move.l d1,(a4)
	lsl.l #4,d0
	add.l d4,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a6
	move.l (a6,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a4)
	addq.l #1,a0
	move.w #1,a4
.L1063:
	moveq #-16,d0
	add.l d2,d0
	moveq #119,d1
	not.b d1
	and.l d1,d0
	jne .L1064
	move.b -16(a2),d0
	jne .L1224
.L1064:
	moveq #-15,d0
	add.l d2,d0
	moveq #119,d1
	not.b d1
	and.l d1,d0
	jne .L1065
	move.b -15(a2),d0
	jne .L1225
.L1065:
	move.l d2,d0
	subq.l #1,d0
	move.l d0,48(sp)
	moveq #119,d0
	not.b d0
	and.l 48(sp),d0
	jne .L1066
	move.b -1(a2),d0
	jne .L1226
.L1066:
	move.l d2,d0
	addq.l #1,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L1201
	move.b 1(a2),d1
	jeq .L1201
	moveq #8,d6
	and.l d1,d6
	cmp.l d3,d6
	jeq .L1201
	moveq #0,d6
	move.b d1,d6
	lea (a0,a0.l),a4
	add.l a0,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l a5,d1
	add.l #256,d1
	move.l d6,d7
	lsl.w #4,d7
	swap d7
	clr.w d7
	or.l d1,d7
	or.l 44(sp),d7
	move.l d7,(a4)
	move.l d6,d7
	lsl.l #4,d7
	add.l d4,d7
	add.l d7,d7
	add.l d7,d7
	lea _MvvLvaScores,a6
	move.l (a6,d7.l),d7
	add.l #1000000,d7
	move.l d7,8(a4)
	addq.l #1,a0
	move.w #1,a4
.L1067:
	move.w #15,a6
	add.l d2,a6
	move.l a6,d6
	moveq #119,d7
	not.b d7
	and.l d7,d6
	jne .L1068
	move.b 15(a2),51(sp)
	jne .L1227
.L1068:
	move.w #16,a6
	add.l d2,a6
	move.l a6,d6
	moveq #119,d7
	not.b d7
	and.l d7,d6
	jne .L1069
	move.b 16(a2),51(sp)
	jeq .L1069
	moveq #8,d6
	move.b 51(sp),d7
	and.l d7,d6
	cmp.l d3,d6
	jeq .L1069
	moveq #0,d6
	move.b d7,d6
	move.l d6,52(sp)
	lea (a0,a0.l),a4
	add.l a0,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a6
	move.l d6,d7
	lsl.w #4,d7
	swap d7
	clr.w d7
	lea (4096,a5),a4
	move.l a4,d6
	or.l d7,d6
	or.l 44(sp),d6
	move.l d6,(a6)
	move.l 52(sp),d6
	lsl.l #4,d6
	add.l d4,d6
	add.l d6,d6
	add.l d6,d6
	lea _MvvLvaScores,a4
	move.l (a4,d6.l),d6
	add.l #1000000,d6
	move.l d6,8(a6)
	addq.l #1,a0
	moveq #17,d6
	add.l d6,d2
	moveq #119,d6
	not.b d6
	and.l d6,d2
	jne .L1071
	move.b 17(a2),d2
	jeq .L1071
	move.w #1,a4
	moveq #8,d6
	and.l d2,d6
	cmp.l d3,d6
	jeq .L1073
.L1233:
	and.l #255,d2
	move.l a0,d3
	add.l a0,d3
	add.l a0,d3
	add.l d3,d3
	add.l d3,d3
	add.l d3,a1
	move.l d2,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	move.l a5,d6
	add.l #4352,d6
	or.l d6,d3
	or.l 44(sp),d3
	move.l d3,(a1)
	lsl.l #4,d2
	add.l d2,d4
	add.l d4,d4
	add.l d4,d4
	lea _MvvLvaScores,a4
	move.l (a4,d4.l),d4
	add.l #1000000,d4
	move.l d4,8(a1)
	addq.l #1,a0
.L1071:
	move.l a0,_moveIndex
	move.b d5,d4
.L1229:
	move.l d0,d2
	addq.l #1,a2
	move.l d1,a5
	cmp.l #128,d0
	jne .L1099
	jra .L1223
.L1042:
	move.l d2,-(sp)
	move.l d3,-(sp)
	jsr _generatePawnCaptureMoves
	move.b _board+128,d4
	addq.l #8,sp
	move.l d2,d0
	addq.l #1,d0
	move.l a5,d1
	add.l #256,d1
	move.l d0,d2
	addq.l #1,a2
	move.l d1,a5
	cmp.l #128,d0
	jne .L1099
	jra .L1223
.L1041:
	move.l _moveIndex,d3
	move.l d2,-(sp)
	jsr _sq2algebraic
	move.l d3,-(sp)
	move.l d0,-(sp)
	moveq #0,d0
	move.b (a2),d0
	move.l d0,-(sp)
	move.l d6,-(sp)
	pea .LC19
	move.l ___sF,a0
	move.l 8(a0),-(sp)
	jsr _fprintf
	jsr _printBoard
	pea 1.w
	jsr _exit
	move.b _board+128,d4
	lea (32,sp),sp
	move.l d2,d0
	addq.l #1,d0
	move.l a5,d1
	add.l #256,d1
	jra .L1040
.L1110:
	clr.b d6
	jra .L1052
.L1113:
	sub.l a4,a4
	jra .L1063
.L1201:
	move.l a5,d1
	add.l #256,d1
	jra .L1067
.L1069:
	moveq #17,d6
	add.l d6,d2
	moveq #119,d6
	not.b d6
	and.l d6,d2
	jeq .L1228
.L1073:
	move.w a4,d2
	tst.b d2
	jne .L1071
	move.b d5,d4
	jra .L1229
.L1058:
	move.w #33,a0
	add.l d2,a0
	move.l a0,d7
	moveq #119,d4
	not.b d4
	and.l d4,d7
	jeq .L1230
.L1062:
	tst.b d6
	jne .L1060
	move.b d5,d4
	move.l d2,d0
	addq.l #1,d0
	move.l a5,d1
	add.l #256,d1
	jra .L1231
.L1207:
	move.w a6,d0
	tst.b d0
	jeq .L1098
.L1206:
	move.l d6,_moveIndex
	move.b d5,d4
	move.l d2,d0
	addq.l #1,d0
	move.l a5,d1
	add.l #256,d1
	jra .L1231
.L1217:
	move.b 52(sp),d5
	tst.b d4
	jne .L1206
	move.b d5,d4
	move.l d2,d0
	addq.l #1,d0
	move.l a5,d1
	add.l #256,d1
	jra .L1231
.L1100:
	cmp.b #127,d0
	jeq .L1103
	move.b d0,d1
	lsr.b #4,d1
	cmp.b #2,d1
	jne .L1103
	moveq #0,d1
	move.b d0,d1
	move.w #15,a1
	add.l d1,a1
	move.l _moveIndex,d0
	cmp.b #9,(a3,a1.l)
	jeq .L1232
.L1107:
	move.w #17,a1
	add.l d1,a1
	cmp.b #9,(a3,a1.l)
	jne .L1039
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	lsl.l #8,d1
	move.l a1,d2
	or.l d2,d1
	or.l #538509312,d1
	move.l d1,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	movem.l (sp)+,#31996
	lea (12,sp),sp
	rts
.L1230:
	move.b 33(a2),d7
	jeq .L1062
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jeq .L1062
.L1235:
	moveq #0,d3
	move.b d7,d3
	move.l d1,a0
	add.l d1,a0
	add.l d1,a0
	add.l a0,a0
	add.l a0,a0
	add.l a0,a1
	move.l d3,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	move.l a5,d6
	add.l #8448,d6
	or.l d6,d4
	move.l a6,d6
	or.l d4,d6
	move.l d6,(a1)
	lsl.l #4,d3
	add.l d3,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a0
	move.l (a0,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a1)
	addq.l #1,d1
	jra .L1060
.L1228:
	move.b 17(a2),d2
	jeq .L1073
	moveq #8,d6
	and.l d2,d6
	cmp.l d3,d6
	jne .L1233
	jra .L1073
.L1218:
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jeq .L1053
	and.l #255,d7
	move.l d1,a4
	add.l d1,a4
	add.l d1,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d7,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	move.l a5,d6
	add.l #-7936,d6
	or.l d4,d6
	move.l a6,d4
	or.l d6,d4
	move.l d4,(a4)
	lsl.l #4,d7
	move.l d7,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_MvvLvaScores,d4
	move.l (a0,d4.l),d6
	add.l #1000000,d6
	move.l d6,8(a4)
	addq.l #1,d1
	moveq #1,d6
	jra .L1053
.L1222:
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jeq .L1057
	and.l #255,d7
	move.l d1,a4
	add.l d1,a4
	add.l d1,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d7,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	move.l a5,d6
	add.l #4608,d6
	or.l d4,d6
	move.l a6,d4
	or.l d6,d4
	move.l d4,(a4)
	lsl.l #4,d7
	move.l d7,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_MvvLvaScores,d4
	move.l (a0,d4.l),d6
	add.l #1000000,d6
	move.l d6,8(a4)
	addq.l #1,d1
	moveq #1,d6
	jra .L1057
.L1221:
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jeq .L1056
	and.l #255,d7
	move.l d1,a4
	add.l d1,a4
	add.l d1,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d7,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	move.l a5,d6
	add.l #3584,d6
	or.l d4,d6
	move.l a6,d4
	or.l d6,d4
	move.l d4,(a4)
	lsl.l #4,d7
	move.l d7,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_MvvLvaScores,d4
	move.l (a0,d4.l),d6
	add.l #1000000,d6
	move.l d6,8(a4)
	addq.l #1,d1
	moveq #1,d6
	jra .L1056
.L1220:
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jeq .L1055
	and.l #255,d7
	move.l d1,a4
	add.l d1,a4
	add.l d1,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d7,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	move.l a5,d6
	add.l #-3584,d6
	or.l d4,d6
	move.l a6,d4
	or.l d6,d4
	move.l d4,(a4)
	lsl.l #4,d7
	move.l d7,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_MvvLvaScores,d4
	move.l (a0,d4.l),d6
	add.l #1000000,d6
	move.l d6,8(a4)
	addq.l #1,d1
	moveq #1,d6
	jra .L1055
.L1219:
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jeq .L1054
	and.l #255,d7
	move.l d1,a4
	add.l d1,a4
	add.l d1,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d7,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	move.l a5,d6
	add.l #-4608,d6
	or.l d4,d6
	move.l a6,d4
	or.l d6,d4
	move.l d4,(a4)
	lsl.l #4,d7
	move.l d7,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	move.l #_MvvLvaScores,d4
	move.l (a0,d4.l),d6
	add.l #1000000,d6
	move.l d6,8(a4)
	addq.l #1,d1
	moveq #1,d6
	jra .L1054
.L1226:
	moveq #8,d1
	and.l d0,d1
	cmp.l d3,d1
	jeq .L1066
	and.l #255,d0
	lea (a0,a0.l),a4
	add.l a0,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d0,d1
	lsl.w #4,d1
	swap d1
	clr.w d1
	move.l a5,d6
	add.l #-256,d6
	or.l d6,d1
	or.l 44(sp),d1
	move.l d1,(a4)
	lsl.l #4,d0
	add.l d4,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a6
	move.l (a6,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a4)
	addq.l #1,a0
	move.w #1,a4
	jra .L1066
.L1225:
	moveq #8,d1
	and.l d0,d1
	cmp.l d3,d1
	jeq .L1065
	and.l #255,d0
	lea (a0,a0.l),a4
	add.l a0,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d0,d1
	lsl.w #4,d1
	swap d1
	clr.w d1
	move.l a5,d6
	add.l #-3840,d6
	or.l d6,d1
	or.l 44(sp),d1
	move.l d1,(a4)
	lsl.l #4,d0
	add.l d4,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a6
	move.l (a6,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a4)
	addq.l #1,a0
	move.w #1,a4
	jra .L1065
.L1224:
	moveq #8,d1
	and.l d0,d1
	cmp.l d3,d1
	jeq .L1064
	and.l #255,d0
	lea (a0,a0.l),a4
	add.l a0,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a4
	move.l d0,d1
	lsl.w #4,d1
	swap d1
	clr.w d1
	move.l a5,d6
	add.l #-4096,d6
	or.l d6,d1
	or.l 44(sp),d1
	move.l d1,(a4)
	lsl.l #4,d0
	add.l d4,d0
	add.l d0,d0
	add.l d0,d0
	lea _MvvLvaScores,a6
	move.l (a6,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a4)
	addq.l #1,a0
	move.w #1,a4
	jra .L1064
.L1227:
	moveq #8,d6
	move.b 51(sp),d7
	and.l d7,d6
	cmp.l d3,d6
	jeq .L1068
	moveq #0,d6
	move.b d7,d6
	move.l d6,52(sp)
	lea (a0,a0.l),a4
	add.l a0,a4
	add.l a4,a4
	add.l a4,a4
	lea (a1,a4.l),a6
	move.l d6,d7
	lsl.w #4,d7
	swap d7
	clr.w d7
	lea (3840,a5),a4
	move.l a4,d6
	or.l d7,d6
	or.l 44(sp),d6
	move.l d6,(a6)
	move.l 52(sp),d6
	lsl.l #4,d6
	add.l d4,d6
	add.l d6,d6
	add.l d6,d6
	lea _MvvLvaScores,a4
	move.l (a4,d6.l),d6
	add.l #1000000,d6
	move.l d6,8(a6)
	addq.l #1,a0
	move.w #1,a4
	jra .L1068
.L1216:
	moveq #0,d1
	move.b d0,d1
	move.w #-17,a1
	add.l d1,a1
	move.l _moveIndex,d0
	cmp.b #1,(a3,a1.l)
	jeq .L1234
	move.w #-15,a1
	add.l d1,a1
	cmp.b #1,(a3,a1.l)
	jne .L1039
.L1236:
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	lsl.l #8,d1
	move.l a1,d2
	or.l d2,d1
	or.l #546373632,d1
	move.l d1,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	movem.l (sp)+,#31996
	lea (12,sp),sp
	rts
.L1115:
	moveq #1,d6
	moveq #8,d4
	and.l d7,d4
	cmp.l d3,d4
	jne .L1235
	jra .L1062
.L1232:
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	move.l d1,d2
	lsl.l #8,d2
	move.l a1,d3
	or.l d3,d2
	or.l #538509312,d2
	move.l d2,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	jra .L1107
.L1234:
	move.l d0,a0
	add.l d0,a0
	add.l d0,a0
	add.l a0,a0
	add.l a0,a0
	add.l _moveList,a0
	move.l d1,d2
	lsl.l #8,d2
	move.l a1,d3
	or.l d3,d2
	or.l #546373632,d2
	move.l d2,(a0)
	move.l #1000105,8(a0)
	addq.l #1,d0
	move.l d0,_moveIndex
	move.w #-15,a1
	add.l d1,a1
	cmp.b #1,(a3,a1.l)
	jne .L1039
	jra .L1236
	.align	2
	.globl	_generateKingCaptureMoves
_generateKingCaptureMoves:
	movem.l #16188,-(sp)
	move.l 44(sp),a5
	move.l 48(sp),d0
	moveq #2,d5
	move.l a5,d1
	or.l d1,d5
	move.l _moveList,a0
	move.l _moveIndex,d1
	move.l d5,d2
	swap d2
	clr.w d2
	or.l d0,d2
	moveq #-17,d3
	add.l d0,d3
	moveq #119,d4
	not.b d4
	and.l d3,d4
	jne .L1252
	lea _board,a1
	move.b (a1,d3.l),d6
	jeq .L1252
	moveq #8,d4
	and.l d6,d4
	cmp.l a5,d4
	jeq .L1252
	and.l #255,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d3
	or.l d2,d3
	move.l d6,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d4,d3
	move.l d3,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
.L1238:
	moveq #-16,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1239
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1282
.L1239:
	moveq #-15,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1240
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a1
	jne .L1283
.L1240:
	move.l d0,d4
	subq.l #1,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1241
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1284
.L1241:
	move.l d0,d4
	addq.l #1,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1242
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1285
.L1242:
	moveq #15,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1243
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1286
.L1243:
	moveq #16,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1244
	lea _board,a2
	move.b (a2,d4.l),d3
	move.w d3,a1
	jeq .L1244
	moveq #8,d3
	move.l a1,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1244
	move.w a1,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a3
	add.l d1,a3
	add.l d1,a3
	add.l a3,a3
	add.l a3,a3
	lea (a0,a3.l),a3
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a3)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a4
	move.l (a1,a4.l),d3
	add.l #1000000,d3
	move.l d3,8(a3)
	addq.l #1,d1
	moveq #17,d3
	add.l d3,d0
	moveq #119,d3
	not.b d3
	and.l d0,d3
	jne .L1246
	move.b (a2,d0.l),d3
	moveq #1,d6
	tst.b d3
	jeq .L1246
.L1249:
	moveq #8,d4
	and.l d3,d4
	cmp.l d4,a5
	jeq .L1247
	and.l #255,d3
	move.l d1,a1
	add.l d1,a1
	add.l d1,a1
	add.l a1,a1
	add.l a1,a1
	add.l a1,a0
	lsl.l #8,d0
	or.l d0,d2
	move.l d3,d0
	lsl.w #4,d0
	swap d0
	clr.w d0
	or.l d0,d2
	move.l d2,(a0)
	lsl.l #4,d3
	add.l d3,d5
	add.l d5,d5
	add.l d5,d5
	lea _MvvLvaScores,a1
	move.l (a1,d5.l),d5
	add.l #1000000,d5
	move.l d5,8(a0)
	addq.l #1,d1
.L1246:
	move.l d1,_moveIndex
	movem.l (sp)+,#15612
	rts
.L1252:
	clr.b d6
	jra .L1238
.L1244:
	moveq #17,d3
	add.l d3,d0
	moveq #119,d3
	not.b d3
	and.l d0,d3
	jeq .L1287
.L1247:
	tst.b d6
	jne .L1246
.L1280:
	movem.l (sp)+,#15612
	rts
.L1287:
	lea _board,a1
	move.b (a1,d0.l),d3
	jne .L1249
	tst.b d6
	jeq .L1280
	jra .L1246
.L1283:
	moveq #8,d3
	move.l a1,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1240
	move.w a1,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1240
.L1282:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1239
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1239
.L1285:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1242
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1242
.L1284:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1241
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1241
.L1286:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1243
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1243
	.align	2
	.globl	_generateKnightCaptureMoves
_generateKnightCaptureMoves:
	movem.l #16188,-(sp)
	move.l 44(sp),a5
	move.l 48(sp),d0
	moveq #3,d5
	move.l a5,d1
	or.l d1,d5
	move.l _moveList,a0
	move.l _moveIndex,d1
	move.l d5,d2
	swap d2
	clr.w d2
	or.l d0,d2
	moveq #-33,d3
	add.l d0,d3
	moveq #119,d4
	not.b d4
	and.l d3,d4
	jne .L1303
	lea _board,a1
	move.b (a1,d3.l),d6
	jeq .L1303
	moveq #8,d4
	and.l d6,d4
	cmp.l a5,d4
	jeq .L1303
	and.l #255,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d3
	or.l d2,d3
	move.l d6,d4
	lsl.w #4,d4
	swap d4
	clr.w d4
	or.l d4,d3
	move.l d3,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
.L1289:
	moveq #-31,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1290
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1333
.L1290:
	moveq #-18,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1291
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a1
	jne .L1334
.L1291:
	moveq #-14,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1292
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1335
.L1292:
	moveq #14,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1293
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1336
.L1293:
	moveq #18,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1294
	lea _board,a1
	move.b (a1,d4.l),d3
	move.w d3,a2
	jne .L1337
.L1294:
	moveq #31,d4
	add.l d0,d4
	moveq #119,d3
	not.b d3
	and.l d4,d3
	jne .L1295
	lea _board,a2
	move.b (a2,d4.l),d3
	move.w d3,a1
	jeq .L1295
	moveq #8,d3
	move.l a1,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1295
	move.w a1,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a3
	add.l d1,a3
	add.l d1,a3
	add.l a3,a3
	add.l a3,a3
	lea (a0,a3.l),a3
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a3)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a4
	move.l (a1,a4.l),d3
	add.l #1000000,d3
	move.l d3,8(a3)
	addq.l #1,d1
	moveq #33,d3
	add.l d3,d0
	moveq #119,d3
	not.b d3
	and.l d0,d3
	jne .L1297
	move.b (a2,d0.l),d3
	moveq #1,d6
	tst.b d3
	jeq .L1297
.L1300:
	moveq #8,d4
	and.l d3,d4
	cmp.l d4,a5
	jeq .L1298
	and.l #255,d3
	move.l d1,a1
	add.l d1,a1
	add.l d1,a1
	add.l a1,a1
	add.l a1,a1
	add.l a1,a0
	lsl.l #8,d0
	or.l d0,d2
	move.l d3,d0
	lsl.w #4,d0
	swap d0
	clr.w d0
	or.l d0,d2
	move.l d2,(a0)
	lsl.l #4,d3
	add.l d3,d5
	add.l d5,d5
	add.l d5,d5
	lea _MvvLvaScores,a1
	move.l (a1,d5.l),d5
	add.l #1000000,d5
	move.l d5,8(a0)
	addq.l #1,d1
.L1297:
	move.l d1,_moveIndex
	movem.l (sp)+,#15612
	rts
.L1303:
	clr.b d6
	jra .L1289
.L1295:
	moveq #33,d3
	add.l d3,d0
	moveq #119,d3
	not.b d3
	and.l d0,d3
	jeq .L1338
.L1298:
	tst.b d6
	jne .L1297
.L1331:
	movem.l (sp)+,#15612
	rts
.L1338:
	lea _board,a1
	move.b (a1,d0.l),d3
	jne .L1300
	tst.b d6
	jeq .L1331
	jra .L1297
.L1334:
	moveq #8,d3
	move.l a1,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1291
	move.w a1,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1291
.L1333:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1290
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1290
.L1336:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1293
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1293
.L1335:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1292
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1292
.L1337:
	moveq #8,d3
	move.l a2,d7
	and.l d7,d3
	cmp.l a5,d3
	jeq .L1294
	move.w a2,d3
	moveq #0,d6
	move.b d3,d6
	move.l d1,a2
	add.l d1,a2
	add.l d1,a2
	add.l a2,a2
	add.l a2,a2
	lea (a0,a2.l),a2
	lsl.l #8,d4
	or.l d2,d4
	move.l d6,d3
	lsl.w #4,d3
	swap d3
	clr.w d3
	or.l d3,d4
	move.l d4,(a2)
	lsl.l #4,d6
	move.l d6,a1
	add.l d5,a1
	add.l a1,a1
	add.l a1,a1
	lea _MvvLvaScores,a3
	move.l (a1,a3.l),d3
	add.l #1000000,d3
	move.l d3,8(a2)
	addq.l #1,d1
	moveq #1,d6
	jra .L1294
	.align	2
	.globl	_generateBishopCaptureMoves
_generateBishopCaptureMoves:
	movem.l #16190,-(sp)
	move.l 48(sp),d2
	move.l 52(sp),d4
	moveq #5,d7
	or.l d2,d7
	move.l _moveList,a3
	move.l _moveIndex,d3
	move.l d7,d0
	swap d0
	clr.w d0
	or.l d4,d0
	move.l d0,a6
	lea _rmoves.3142+4,a1
	move.l #_rmoves.3142+16,d5
	sub.l a5,a5
	move.w #-17,a4
	lea _board,a0
	lea _MvvLvaScores,a2
	move.l d4,d0
.L1343:
	add.l a4,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L1340
	move.b (a0,d0.l),d1
	jeq .L1343
	moveq #8,d6
	and.l d1,d6
	cmp.l d6,d2
	jeq .L1340
	and.l #255,d1
	move.l d3,a4
	add.l d3,a4
	add.l d3,a4
	add.l a4,a4
	add.l a4,a4
	lea (a3,a4.l),a4
	lsl.l #8,d0
	move.l a6,d6
	or.l d6,d0
	move.l d1,d6
	lsl.w #4,d6
	swap d6
	clr.w d6
	or.l d0,d6
	move.l d6,(a4)
	lsl.l #4,d1
	move.l d1,d0
	add.l d7,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a2,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a4)
	addq.l #1,d3
	move.w #1,a5
.L1340:
	cmp.l d5,a1
	jeq .L1345
	move.l (a1)+,a4
	move.l d4,d0
	jra .L1343
.L1345:
	move.w a5,d0
	tst.b d0
	jne .L1357
	movem.l (sp)+,#31996
	rts
.L1357:
	move.l d3,_moveIndex
	movem.l (sp)+,#31996
	rts
	.align	2
	.globl	_generateRookCaptureMoves
_generateRookCaptureMoves:
	movem.l #16190,-(sp)
	move.l 48(sp),d2
	move.l 52(sp),d4
	moveq #6,d7
	or.l d2,d7
	move.l _moveList,a3
	move.l _moveIndex,d3
	move.l d7,d0
	swap d0
	clr.w d0
	or.l d4,d0
	move.l d0,a6
	lea _rmoves.3155+4,a1
	move.l #_rmoves.3155+16,d5
	sub.l a5,a5
	move.w #-16,a4
	lea _board,a0
	lea _MvvLvaScores,a2
	move.l d4,d0
.L1362:
	add.l a4,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L1359
	move.b (a0,d0.l),d1
	jeq .L1362
	moveq #8,d6
	and.l d1,d6
	cmp.l d6,d2
	jeq .L1359
	and.l #255,d1
	move.l d3,a4
	add.l d3,a4
	add.l d3,a4
	add.l a4,a4
	add.l a4,a4
	lea (a3,a4.l),a4
	lsl.l #8,d0
	move.l a6,d6
	or.l d6,d0
	move.l d1,d6
	lsl.w #4,d6
	swap d6
	clr.w d6
	or.l d0,d6
	move.l d6,(a4)
	lsl.l #4,d1
	move.l d1,d0
	add.l d7,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a2,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a4)
	addq.l #1,d3
	move.w #1,a5
.L1359:
	cmp.l d5,a1
	jeq .L1364
	move.l (a1)+,a4
	move.l d4,d0
	jra .L1362
.L1364:
	move.w a5,d0
	tst.b d0
	jne .L1376
	movem.l (sp)+,#31996
	rts
.L1376:
	move.l d3,_moveIndex
	movem.l (sp)+,#31996
	rts
	.align	2
	.globl	_generateQueenCaptureMoves
_generateQueenCaptureMoves:
	movem.l #16190,-(sp)
	move.l 48(sp),d2
	move.l 52(sp),d4
	moveq #7,d7
	or.l d2,d7
	move.l _moveList,a3
	move.l _moveIndex,d3
	move.l d7,d0
	swap d0
	clr.w d0
	or.l d4,d0
	move.l d0,a6
	lea _rmoves.3168+4,a1
	move.l #_rmoves.3168+32,d5
	sub.l a5,a5
	move.w #-17,a4
	lea _board,a0
	lea _MvvLvaScores,a2
	move.l d4,d0
.L1381:
	add.l a4,d0
	moveq #119,d1
	not.b d1
	and.l d0,d1
	jne .L1378
	move.b (a0,d0.l),d1
	jeq .L1381
	moveq #8,d6
	and.l d1,d6
	cmp.l d6,d2
	jeq .L1378
	and.l #255,d1
	move.l d3,a4
	add.l d3,a4
	add.l d3,a4
	add.l a4,a4
	add.l a4,a4
	lea (a3,a4.l),a4
	lsl.l #8,d0
	move.l a6,d6
	or.l d6,d0
	move.l d1,d6
	lsl.w #4,d6
	swap d6
	clr.w d6
	or.l d0,d6
	move.l d6,(a4)
	lsl.l #4,d1
	move.l d1,d0
	add.l d7,d0
	add.l d0,d0
	add.l d0,d0
	move.l (a2,d0.l),d0
	add.l #1000000,d0
	move.l d0,8(a4)
	addq.l #1,d3
	move.w #1,a5
.L1378:
	cmp.l d5,a1
	jeq .L1383
	move.l (a1)+,a4
	move.l d4,d0
	jra .L1381
.L1383:
	move.w a5,d0
	tst.b d0
	jne .L1395
	movem.l (sp)+,#31996
	rts
.L1395:
	move.l d3,_moveIndex
	movem.l (sp)+,#31996
	rts
	.align	2
_rmoves.3168:
	.long	-17
	.long	-16
	.long	-15
	.long	-1
	.long	1
	.long	15
	.long	16
	.long	17
	.align	2
_rmoves.3155:
	.long	-16
	.long	-1
	.long	1
	.long	16
	.align	2
_rmoves.3142:
	.long	-17
	.long	-15
	.long	15
	.long	17
	.align	2
_rmoves.2992:
	.long	-17
	.long	-16
	.long	-15
	.long	-1
	.long	1
	.long	15
	.long	16
	.long	17
	.align	2
_rmoves.2979:
	.long	-16
	.long	-1
	.long	1
	.long	16
	.align	2
_rmoves.2966:
	.long	-17
	.long	-15
	.long	15
	.long	17
	.align	2
_rmoves.2956:
	.long	-33
	.long	-31
	.long	-18
	.long	-14
	.long	14
	.long	18
	.long	31
	.long	33
	.align	2
_rmoves.2946:
	.long	-17
	.long	-16
	.long	-15
	.long	-1
	.long	1
	.long	15
	.long	16
	.long	17
.lcomm _buffer.2880,10
.lcomm _buffer.2847,12
.lcomm _buffer.2819,8
.lcomm _MvvLvaScores,1024
	.globl	_VictimScore
	.align	2
_VictimScore:
	.long	0
	.long	100
	.long	600
	.long	200
	.long	0
	.long	300
	.long	400
	.long	500
	.long	0
	.long	100
	.long	600
	.long	200
	.long	0
	.long	300
	.long	400
	.long	500
.comm _kingLoc,8
.comm _moveIndex,4
.comm _moveList,4
